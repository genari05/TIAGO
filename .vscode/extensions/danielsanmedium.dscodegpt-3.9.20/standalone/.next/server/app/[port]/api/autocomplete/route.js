"use strict";(()=>{var e={};e.id=8820,e.ids=[8820],e.modules={65372:e=>{e.exports=require("better-sqlite3-multiple-ciphers")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},61282:e=>{e.exports=require("child_process")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},92048:e=>{e.exports=require("fs")},20629:e=>{e.exports=require("fs/promises")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},98216:e=>{e.exports=require("net")},19801:e=>{e.exports=require("os")},55315:e=>{e.exports=require("path")},68621:e=>{e.exports=require("punycode")},76162:e=>{e.exports=require("stream")},82452:e=>{e.exports=require("tls")},74175:e=>{e.exports=require("tty")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},6162:e=>{e.exports=require("worker_threads")},71568:e=>{e.exports=require("zlib")},15673:e=>{e.exports=require("node:events")},87561:e=>{e.exports=require("node:fs")},84492:e=>{e.exports=require("node:stream")},72477:e=>{e.exports=require("node:stream/web")},88855:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{originalPathname:()=>m,patchFetch:()=>c,requestAsyncStorage:()=>p,routeModule:()=>u,serverHooks:()=>h,staticGenerationAsyncStorage:()=>d});var n=r(49303),i=r(88716),a=r(60670),o=r(44572),l=e([o]);o=(l.then?(await l)():l)[0];let u=new n.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/[port]/api/autocomplete/route",pathname:"/[port]/api/autocomplete",filename:"route",bundlePath:"app/[port]/api/autocomplete/route"},resolvedPagePath:"/Users/maol/WebstormProjects/Trabajo/codegpt-nextjs/app/[port]/api/autocomplete/route.ts",nextConfigOutput:"standalone",userland:o}),{requestAsyncStorage:p,staticGenerationAsyncStorage:d,serverHooks:h}=u,m="/[port]/api/autocomplete/route";function c(){return(0,a.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:d})}s()}catch(e){s(e)}})},87385:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{setVicunaSession:()=>p});var n=r(24330);r(60166);var i=r(77807),a=r(82687),o=r(50249),l=r(71615),c=r(40618),u=e([a]);a=(u.then?(await u)():u)[0];let p=async({accessToken:e,refreshToken:t,expiresAt:r})=>{console.log("SET VICUNA SESSION"),e||t||r||(0,o.R)((0,l.cookies)()).auth.signOut({scope:"local"}).catch(e=>console.log(e));let s=e||a.ZI.getByProvider("CodeGPT Plus Beta")?.apikey,n=await fetch(`${i.xf}/me`,{method:"GET",cache:"no-store",...s?{headers:{Authorization:`Bearer ${s}`}}:{}}),c=await n.json(),u=c?.user?.distinct_id,p=c?.signedDistinctId;a.PR.upsert({access_token:e,refresh_token:t,expires_at:Number(r),signed_distinct_id:p,distinct_id:u})};(0,c.h)([p]),(0,n.j)("cb8707d39cee2d6b73f7d2a0c3a37eb9243fb61d",p),s()}catch(e){s(e)}})},74506:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{Z:()=>c});var n=r(87385),i=r(82687),a=r(50249),o=r(71615),l=e([n,i]);async function c(){let e=i.PR.get(),t=e?.access_token;if(t&&parseInt(e?.expires_at+"000")<Date.now()){let r=(0,a.R)((0,o.cookies)()),{data:s,error:i}=await r.auth.refreshSession({refresh_token:e?.refresh_token});i?(console.log("vicu\xf1a refreshSession error: ",i.message),(i.message.includes("Refresh Token Not Found")||i.message.includes("Already Used"))&&await (0,n.setVicunaSession)({accessToken:"",refreshToken:"",expiresAt:""})):(await (0,n.setVicunaSession)({accessToken:s.session.access_token,refreshToken:s.session.refresh_token,expiresAt:String(s.session.expires_at)}),t=s.session.access_token)}return t||void 0}[n,i]=l.then?(await l)():l,s()}catch(e){s(e)}})},44572:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{POST:()=>a});var n=r(62200),i=e([n]);async function a(e){let t=await e.json(),r=(0,n.r1)(t);if(t.isSCM){let e=await (0,n.CB)(t.workspacePath);r.prefix=`${e}${r.prefix}`}let s=await (0,n.UF)(r,t.isSCM??!1);return Response.json({text:s?.text,indexSuffix:s?.indexSuffix,autocompleteId:s?.autocompleteId,provider:s.provider,model:s.model,error:s.error})}n=(i.then?(await i)():i)[0],s()}catch(e){s(e)}})},20021:(e,t,r)=>{r.d(t,{a:()=>n,ed:()=>s});let s=e=>{},n=[{id:"CodeGPT Plus Beta",name:"CodeGPT Plus",link:"codegptplusbeta",editable:!0,agents:!0,models:["gpt-3.5-turbo","GPT-4","gpt-4o"],autocompleteModels:["Plus","Plus-turbo"],ides:["vscode","jetbrains"]},{name:"OpenAI",link:"openai",editable:!0,models:["o1-preview","o1-preview-2024-09-12","o1-mini","o1-mini-2024-09-12","gpt-4o","gpt-4o-mini","gpt-4o-2024-11-20","gpt-4o-2024-05-13","gpt-4-turbo","gpt-4","gpt-4-turbo-2024-04-09","gpt-4-0125-preview","gpt-4-1106-preview","gpt-4-32k","gpt-4-32k-0613","gpt-3.5-turbo","gpt-3.5-turbo-0125","gpt-3.5-turbo-1106","gpt-3.5-turbo-16k","gpt-3.5-turbo-16k-0613"],ides:["vscode","jetbrains"]},{name:"Azure",link:"azure",editable:!0,models:["Azure"],ides:["vscode","jetbrains"]},{name:"Anthropic",link:"anthropic",editable:!0,models:["claude-3-5-sonnet-20240620","claude-3-5-haiku-20241022","claude-3-opus-20240229","claude-3-sonnet-20240229","claude-3-haiku-20240307","claude-2.1","claude-2.0","claude-instant-1.2"],ides:["vscode","jetbrains"]},{name:"Nvidia",link:"nvidia",editable:!0,models:["meta/llama-3.1-405b-instruct","meta/llama-3.1-8b-instruct","meta/llama3-70b-instruct","meta/llama3-8b-instruct","nvidia/llama-3.1-nemotron-70b-instruct","nvidia/nemotron-4-340b-instruct","nvidia/usdcode-llama3-70b-instruct","ibm/granite-34b-code-instruct","microsoft/phi-3-mini-128k-instruct","nv-mistralai/mistral-nemo-12b-instruct","mistralai/codestral-22b-instruct-v0.1","mistralai/mixtral-8x22b-v0.1","mistralai/mistral-large","mistralai/mistral-7b-instruct-v0.2","google/gemma-2-2b-it","google/gemma-2-9b-it","google/gemma-2-27b-it","google/gemma-7b","google/gemma-2b","google/codegemma-7b","google/recurrentgemma-2b","meta/codellama-70b","meta/llama2-70b"],ides:["vscode","jetbrains"]},{id:"grok",name:"Grok",link:"grok",models:["grok-beta"],ides:["vscode","jetbrains"]},{id:"Github Copilot",name:"Github Copilot",link:"githubcopilot",models:["claude-3.5-sonnet","o1","o1-mini","gpt-4o","gpt-4o-mini","gpt-4-turbo","gpt-4","gpt-3.5-turbo"],ides:["vscode"]},{id:"Github",name:"Github Models",link:"github",models:["gpt-4o","gpt-4o-mini","Mistral-large","Mistral-large-2407","Mistral-Nemo","Mistral-small","AI21-Jamba-Instruct","Meta-Llama-3-70B-Instruct","Meta-Llama-3-8B-Instruct","Meta-Llama-3.1-405B-Instruct","Meta-Llama-3.1-70B-Instruct","Meta-Llama-3.1-8B-Instruct","Cohere-command-r","Cohere-command-r-plus","Phi-3-medium-128k-instruct","Phi-3-medium-4k-instruct","Phi-3-mini-128k-instruct","Phi-3-mini-4k-instruct","Phi-3-small-128k-instruct","Phi-3-small-8k-instruct","Phi-3.5-mini-instruct"],ides:["vscode","jetbrains"]},{name:"Cohere",link:"cohere",editable:!0,models:["aya","command-r-plus","command-r","command","command-light"],ides:["vscode","jetbrains"]},{name:"Vertex",link:"vertex",editable:!0,models:["llama3-8b-hf","llama3-8b-chat-hf","llama3-70b-hf","llama3-70b-chat-hf","gemini-pro","gemini-1.0-pro","gemini-1.5-pro-latest","gemini-1.5-pro-preview-0514","gemini-1.5-flash-preview-0514","gemini-ultra","gemini-nano"],ides:["vscode","jetbrains"]},{name:"Google AI Studio",link:"googleaistudio",editable:!0,models:["gemini-exp-1121","gemini-exp-1114","gemini-1.5-flash-latest","gemini-1.5-flash","gemini-1.5-pro-exp-0801","gemini-1.5-pro-latest","gemini-1.5-pro","gemini-1.0-pro-latest","gemini-1.0-pro","gemma-2-2b-it","gemma-2-9b-it","gemma-2-27b-it"],ides:["vscode","jetbrains"]},{name:"DeepSeek",link:"deepseek",models:["deepseek-chat","deepseek-coder"],ides:["vscode","jetbrains"]},{name:"Mistral",link:"mistral",editable:!0,models:["pixtral-latest","codestral-mamba-latest","codestral-latest","ministral-8b-latest","ministral-3b-latest","mistral-large-latest","mistral-medium-latest","mistral-small-latest","mistral-tiny","open-mistral-nemo-2407","open-mistral-7b","open-mixtral-8x7b","open-mixtral-8x22b"],autocompleteModels:["codestral-latest"],ides:["vscode","jetbrains"]},{name:"Ollama",link:"ollama",editable:!0,models:["llama3.2:3b","llama3.2:1b","llama3.1:405b","llama3.1:70b","llama3.1:8b","llama3:70b","llama3:8b","codellama:latest","codestral:latest","mathstral:latest","mixtral:latest","mistral:v0.3","mistral:latest","codegeex4:9b","reflection:70b","yi-coder:1.5b","yi-coder:9b","sailor2:1b","sailor2:8b","sailor2:20b","qwq","qwen2.5-coder:0.5b","qwen2.5-coder:1.5b","qwen2.5-coder:3b","qwen2.5-coder:7b","qwen2.5-coder:14b","qwen2.5-coder:32b","codeqwen","qwen2:72b","qwen2:7b","qwen2:1.5b","qwen2:0.5b","command-r-plus:latest","command-r:latest","aya:8b","aya:35b","phi3.5:latest","phi3:mini","phi3:medium","phi3:latest","nemotron-mini:4b","granite3-dense:8b","granite3-dense:2b","granite3-moe:1b","granite3-moe:3b","granite-code:3b","granite-code:8b","granite-code:20b","granite-code:34b","codegemma:latest","gemma2:2b","gemma2:9b","gemma2:27b","gemma:2b","gemma:7b","dbrx:latest","deepseek-v2.5:236b","deepseek-coder:latest","deepseek-coder-v2","starcoder2:latest","dolphincoder:latest","dolphin-mixtral:latest","starling-lm:latest","llama2-uncensored:latest"],autocompleteModels:["codestral:latest","qwen2.5-coder:0.5b","qwen2.5-coder:1.5b","qwen2.5-coder:3b","qwen2.5-coder:7b","qwen2.5-coder:14b","qwen2.5-coder:32b","deepseek-coder:base","deepseek-coder-v2","codegemma:code","codellama:code"],ides:["vscode","jetbrains"]},{name:"Fireworks AI",link:"fireworksai",editable:!0,models:["llama-v3p1-405b-instruct","llama-v3p1-70b-instruct","llama-v3p1-8b-instruct","llama-v3-70b-instruct","llama-v2-7b-chat","llama-v2-70b-chat","yi-large","qwen2-72b-instruct","mixtral-8x22b-instruct","mixtral-8x7b","gemma-7b-it","dbrx-instruct","zephyr-7b-beta"],ides:["vscode","jetbrains"]},{name:"Huggingface",link:"huggingface",editable:!0,models:["meta-llama/Llama-3.2-1B-Instruct","meta-llama/Llama-3.2-3B-Instruct","meta-llama/Meta-Llama-3-8B-Instruct","mistralai/Mixtral-8x7B-Instruct-v0.1","microsoft/Phi-3.5-mini-instruct","Qwen/Qwen2.5-72B-Instruct","Qwen/Qwen2.5-1.5B-Instruct"],ides:["vscode","jetbrains"]},{name:"Bedrock",link:"bedrock",editable:!0,models:["claude-3.5-sonnet","claude-3-sonnet","claude-v2","claude-v2.1","claude-v1","claude-instant"],ides:["vscode","jetbrains"]},{name:"Perplexity",link:"perplexity",editable:!0,models:["llama-3.1-sonar-small-128k-online","llama-3.1-sonar-large-128k-online","llama-3.1-sonar-huge-128k-online","llama-3.1-sonar-small-128k-chat","llama-3.1-sonar-large-128k-chat","llama-3.1-8b-instruct","llama-3.1-70b-instruct","llama-3-8b-instruct","llama-3-70b-instruct","llama-2-70b-chat","codellama-34b-instruct","codellama-70b-instruct","mistral-7b-instruct","mixtral-8x7b-instruct","pplx-7b-chat","pplx-70b-chat","pplx-7b-online","pplx-70b-online","sonar-small-chat","sonar-small-online","sonar-medium-chat","sonar-medium-online"],ides:["vscode","jetbrains"]},{name:"LM Studio",link:"lmstudio",models:["Not required"],ides:["vscode","jetbrains"]},{name:"Groq",link:"groq",models:["llama-3.2-90b-text-preview","llama-3.2-11b-text-preview","llama-3.2-3b-preview","llama-3.2-1b-preview","llama-3.1-405b-reasoning","llama-3.1-70b-versatile","llama-3.1-8b-instant","llama3-70b-8192","llama3-8b-8192","mixtral-8x7b-32768","gemma2-9b-it","gemma-7b-it"],ides:["vscode","jetbrains"]},{name:"Cerebras",link:"cerebras",models:["llama3.1-8b","llama3.1-70b"],ides:["vscode","jetbrains"]},{name:"Custom",link:"custom",editable:!0,models:[],ides:["vscode","jetbrains"]},{id:"CodeGPT Enterprise",name:"CodeGPT Enterprise",link:"codegptenterprise",agents:!0,models:["gpt-3.5-turbo","GPT-4"],autocompleteModels:["Plus"],ides:["vscode","jetbrains"]}]},39300:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),function(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}(r(21528))},21528:function(e,t,r){var s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});let n=r(92048),i=s(r(19092)).default("@kwsites/file-exists");t.exists=function(e,r=t.READABLE){return function(e,t,r){i("checking %s",e);try{let s=n.statSync(e);if(s.isFile()&&t)return i("[OK] path represents a file"),!0;if(s.isDirectory()&&r)return i("[OK] path represents a directory"),!0;return i("[FAIL] path represents something other than a file or directory"),!1}catch(e){if("ENOENT"===e.code)return i("[FAIL] path is not accessible: %o",e),!1;throw i("[FATAL] %o",e),e}}(e,(r&t.FILE)>0,(r&t.FOLDER)>0)},t.FILE=1,t.FOLDER=2,t.READABLE=t.FILE+t.FOLDER},68275:(e,t)=>{function r(){let e,t;let r="pending";return{promise:new Promise((r,s)=>{e=r,t=s}),done(t){"pending"===r&&(r="resolved",e(t))},fail(e){"pending"===r&&(r="rejected",t(e))},get fulfilled(){return"pending"!==r},get status(){return r}}}t.dD=t.gX=void 0,t.gX=r,t.dD=r},96355:(e,t)=>{t.Ku=void 0,t.Ku=function(e,t,r,s){if(void 0===r&&(r=2),void 0===s&&(s=!1),s||(e=e.toLowerCase(),t=t.toLowerCase()),e.length<r||t.length<r)return 0;for(var n=new Map,i=0;i<e.length-(r-1);i++){var a=e.substr(i,r);n.set(a,n.has(a)?n.get(a)+1:1)}for(var o=0,l=0;l<t.length-(r-1);l++){var c=t.substr(l,r),u=n.has(c)?n.get(c):0;u>0&&(n.set(c,u-1),o++)}return 2*o/(e.length+t.length-(r-1)*2)},t.Ku},50249:(e,t,r)=>{r.d(t,{R:()=>a});var s=r(16510);let n="https://auth.codegpt.co",i="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJyb3h1dnNyc2RieGFjb2twcmF1Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTU0OTEyNzgsImV4cCI6MjAxMTA2NzI3OH0.fyyxVq2c2eLIExMQEUxP8wNoyY2UumBrfN5So16TCno";(0,s.createBrowserClient)(n,i);let a=e=>(0,s.createServerClient)(n,i,{cookies:{get:t=>e.get(t)?.value,set(t,r,s){try{e.set({name:t,value:r,...s})}catch(e){}},remove(t,r){try{e.set({name:t,value:"",...r})}catch(e){}}}})},17319:(e,t,r)=>{r.d(t,{Z:()=>i});var s=r(74167);class n{constructor(e=1e3){this.cache=new Map,this.limit=e}_generateCombinations(e,t){let r=[],n=e+t,i=e.length,a=Math.min(e.length+t.length,e.length+s.Md);for(let e=i;e<=a-1;e++){let t=n.slice(0,e),s=n.slice(e);r.push({prefix:t,middle:s})}return r}_hashPrompt(e){let t=`${e.prefix}-${e.suffix}`,r=0,s;if(0===t.length)return"";for(s=0;s<t.length;s++)r=(r<<5)-r+t.charCodeAt(s)|0;return r.toString()}get(e){let t=this._hashPrompt(e);return this.cache.get(t)||["",""]}set(e,t,r){for(let s of this._generateCombinations(e.prefix,t)){let t=this._hashPrompt({prefix:s.prefix,suffix:e.suffix});if(this.cache.set(t,[s.middle,r]),this.cache.size>this.limit){let e=this.cache.keys().next().value;e&&this.cache.delete(e)}}}clear(){this.cache.clear()}}let i=new n},74167:(e,t,r)=>{r.d(t,{Md:()=>i,Rm:()=>n,Tf:()=>o,dE:()=>a,kr:()=>s});let s={"c++":"//",c:"//",cpp:"//",csharp:"//",css:"/*",dart:"//",go:"//",html:"<!--",java:"//",javascript:"//",javascriptreact:"//",json:"//",kotlin:"//",php:"//",powershell:"#",python:"#",r:"#",ruby:"#",shellscript:"#",swift:"//",terraform:"#",typescript:"//",typescriptreact:"//",vue:"//",yaml:"#"},n=128,i=20,a=["csv","png","pdf","jpg","jpeg","gif","doc","xls","xlsx","docx","ppt","pptx","exe","msi","dll","bin","iso","dmg","deb","rpm","so","apk","ipa","o","a","oaut","class","jar","war","zip","tar","gz","tgz","bz2","xz","7z","rar","log","mp3","mp4","mov","avi","wmv","flv","mkv"],o=`In the Git diff, lines starting with "+" are additions, and lines starting with "-" are removals. The diff may contain changes from multiple files. Write a single-line commit message in English, ideally 50 characters or less, capturing the essence of the change, focusing on the "what" and "why" rather than the "how". If the change is more extensive, the commit message can exceed 50 characters but should remain concise.

### Examples:

**Input Diff Example 1 (1 file):**

\`\`\`
$> git diff --staged
#> Changes for src/components/Header.js 
diff --git a/src/components/Header.js b/src/components/Header.js  
index 1234567..abcdefg 100644  
--- a/src/components/Header.js  
+++ b/src/components/Header.js  
@@ -15,7 +15,7 @@ const Header = () => {  
   return (  
     <header>  
       <nav>  
-        <a href="/">Home</a>  
+        <a href="/">HomePage</a>  
         <a href="/about">About</a>  
-        <a href="/contact">Contact</a>  
+        <a href="/contact">Contact Us</a>  
       </nav>  
     </header>  
   );  
\`\`\`

**COMMIT MESSAGE:**
\`\`\`
Update navigation links in Header component for clarity

Revised the text of navigation links in the Header component from "Home" to "HomePage" and "Contact" to "Contact Us."
\`\`\`

---

**Input Diff Example 2 (1 file):**

\`\`\`
$> git diff --staged
#> Changes for src/utils/parseDate.js
diff --git a/src/utils/calculate.js b/src/utils/calculate.js  
index 123abcd..789xyz 100644  
--- a/src/utils/calculate.js  
+++ b/src/utils/calculate.js  
@@ -20,7 +20,9 @@ const calculateTotal = (items) => {  
   let total = 0;  
   items.forEach(item => {  
     total += item.price * item.quantity;  
-    if (item.discount) total -= item.discount;  
+    if (item.discount) {  
+      total -= item.discount;  
+    }  
   });  
   return total;  
 }  
\`\`\`

**COMMIT MESSAGE:**
\`\`\`
Refactor discount logic block in calculateTotal function

Added curly braces to the discount condition in the calculateTotal function.
\`\`\`

---

**Input Diff Example 3 (2 files):**

\`\`\`
$> git diff --staged
#> Changes for src/common/formatDate.js
diff --git a/src/common/formatDate.js b/src/common/formatDate.js  
index 345abc..678def 100644  
--- a/src/common/formatDate.js  
+++ b/src/common/formatDate.js  
@@ -10,6 +10,7 @@ export const formatDate = (date) => {  
   const options = { year: 'numeric', month: 'long', day: 'numeric' };  
   return new Intl.DateTimeFormat('en-US', options).format(date);  
 };  
 
+// Note: Input date must be in UTC format for consistent results  
 export default formatDate;  

#> Changes for src/helpers/parseDate.js
diff --git a/src/helpers/parseDate.js b/src/helpers/parseDate.js  
index 789xyz..123lmn 100644  
--- a/src/helpers/parseDate.js  
+++ b/src/helpers/parseDate.js  
@@ -5,6 +5,7 @@ export const parseDate = (string) => {  
   // Converts a date string to a Date object  
   return new Date(Date.parse(string));  
 };  
 
+// Ensure input string is in ISO format (YYYY-MM-DDTHH:MM:SSZ)  
 export default parseDate;  
\`\`\`

**COMMIT MESSAGE:**
\`\`\`
Add comments to clarify date formats in formatDate and parseDate

Added comments to the formatDate and parseDate functions, specifying the required input formats (UTC for formatDate and ISO for parseDate).
\`\`\`

---

**Input Diff Example 4 (4 files):**

\`\`\`
$> git diff --staged
#> Changes for src/api/request_handler.py
diff --git a/src/api/request_handler.py b/src/api/request_handler.py  
index 123abc..456def 100644  
--- a/src/api/request_handler.py  
+++ b/src/api/request_handler.py  
@@ -35,7 +35,7 @@ def fetch_data(endpoint):  
     try:  
         response = requests.get(endpoint)  
         response.raise_for_status()  
-        return response.json()  
+        return response.content  
     except requests.exceptions.RequestException as e:  
         log_error(e)  
         return None  

#> Changes for src/helpers/logger.py
diff --git a/src/helpers/logger.py b/src/helpers/logger.py  
index 789ghi..012jkl 100644  
--- a/src/helpers/logger.py  
+++ b/src/helpers/logger.py  
@@ -10,6 +10,7 @@ def log_error(error):  
     # Logs error to a file  
     with open('logs/error.log', 'a') as log_file:  
         log_file.write(f"{datetime.now()}: {str(error)}
")  
+    send_notification(str(error))  # Notify admin  

#> Changes for src/utils/data_processor.py 
diff --git a/src/utils/data_processor.py b/src/utils/data_processor.py  
index 345mno..678pqr 100644  
--- a/src/utils/data_processor.py  
+++ b/src/utils/data_processor.py  
@@ -25,6 +25,8 @@ def process_data(data):  
     # Processes raw data  
     if not isinstance(data, list):  
         raise ValueError("Expected data to be a list")  
+    if not data:  
+        raise ValueError("Data cannot be empty")  
     return [item.lower() for item in data]  

#> Changes for src/tests/test_data_processor.py 
diff --git a/src/tests/test_data_processor.py b/src/tests/test_data_processor.py  
index 901stu..234vwx 100644  
--- a/src/tests/test_data_processor.py  
+++ b/src/tests/test_data_processor.py  
@@ -5,7 +5,7 @@ def test_process_data():  
     data = ["Hello", "World"]  
     result = process_data(data)  
     assert result == ["hello", "world"]  
-  
+    with pytest.raises(ValueError):  
+        process_data([])  # Test for empty data  
\`\`\`

**COMMIT MESSAGE:**
\`\`\`
Enhance data handling and introduce error notifications across core modules

Changed \`fetch_data\` in request_handler to return \`response.content\` instead of \`response.json()\`, ensuring compatibility with non-JSON responses. Added a notification system to the logger in logger.py to alert administrators in real-time when an error occurs. Enhanced data validation in data_processor.py by adding a check for empty data, improving robustness. Updated test_data_processor.py to include tests for empty data cases, increasing test coverage and preventing future regressions.
\`\`\`

---`},62200:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{CB:()=>m,UF:()=>g,r1:()=>d,zy:()=>h});var n=r(20021),i=r(82687),a=r(74167),o=r(14564),l=r(96355),c=r(17319),u=r(8072),p=e([i,u]);[i,u]=p.then?(await p)():p;let b="",y="";function d({text:e,positionLine:t,positionChar:r,fileName:s,language:n,isSCM:i=!1}){let o=e.split("\n"),l="",c="",u="",p=Math.floor(30),d=Math.floor((100-p)*.7),h=100-p-d,m=Math.max(0,t-d),f=Math.min(o.length,t+h);for(let e=m;e<t;e++)l+=o[e]+"\n";l+=o[t].slice(0,r),c+=o[t].slice(r);for(let e=t+1;e<f;e++)c+="\n"+o[e];p>0&&o.length>100&&(u=o.slice(0,p).join("\n"));let g=a.kr[n]??"//",b=u?u+`
${g}...
`+l:l;return b&&!i&&(b=`${g} ${s}
${b}`),{prefix:b,suffix:c}}function h(e,t){let r=["\n\n"],s=e.prefix.trimEnd().split("\n").slice(-1)[0].trim().split(/[\s]/g).slice(-1)[0];if(s.length>2&&r.push(s),e.suffix){let t=e.suffix.split("\n")[0];if(/^\s+/.test(t)&&t.trim().length>0&&r.push("\n"),/^[\s\t\n]/.test(e.suffix)){let t=e.suffix.split(/[.:,|&]/)[0];if(t){let e=t.replace(/ /g,"").match(/^\n*/);e&&1===e[0].length&&r.push("\n")}}else r.push("\n");let s=e.suffix.trim().split("\n")[0],n=s.trim().split(/[\s]/g)[0],i=s.match(/(?=[^a-zA-Z\d_\-\+\.]*$)(.*)/);if(i){let e=i[1];e.length>=2&&r.push(e)}n.length>=2&&r.push(n)}return t&&(r.push("---"),r.push("```"),r.push("**Input")),console.log({stopWords:r}),r}async function m(e){let t=(0,o.o5)(e),r=(await t.diffSummary("--staged")).files,s="";if(0===r.length)return"";let n=0;for(let e of r){let r=e.file;if(a.dE.includes(r.split(".").slice(-1)[0]))continue;n+=1;let i=(await t.diff(["HEAD~1","--",r])).split("\n").slice(0,200),o=i.some(e=>"--- /dev/null"===e),l=i.some(e=>"+++ /dev/null"===e);o?s+=`#> Changes for ${r}
+++ Added File ${r}
`:l?s+=`#> Changes for ${r}
--- Deleted File ${r}
`:s+=`#> Changes for ${r}
`+i.join("\n")}return s?`${a.Tf}

**Input Diff Example 5 (${n} files):**

\`\`\`
$> git diff --staged
${s}\`\`\`

**COMMIT MESSAGE:**\`\`\`
`:""}function f(e,t){let r=t.suffix.split("\n")[0],s=r.match(/^\s*/)??[""],n=-1;if(t.suffix&&!/^[\t\n]/.test(t.suffix)){for(let t=r.length;t>s[0].length;t--)if((n=e.indexOf(r.slice(0,t)))>=0)return{indexSuffix:n,remainText:r.slice(t)}}return{indexSuffix:n,remainText:r}}let k={anthropic:u.G.anthropic,openai:u.G.openai,ollama:u.G.ollama,codegptplus:u.G.codegpt,codegptenterprise:u.G.codegptEnterprise,mistral:u.G.mistral};async function g(e,t){let{enabled:r,provider:s,model:a}=i.JF.get(),o=n.a.find(e=>e.link.startsWith(s))?.name||s;if(!r||!e.prefix&&!e.suffix)return{text:"",indexSuffix:-1,autocompleteId:"",provider:o,model:a};o!==b&&a!==y&&c.Z.clear(),b=o,y=a;let[u,p]=c.Z.get(e);if(u){let{indexSuffix:t,remainText:r}=f(u,e);return t>=0&&!u.slice(t).includes(r)&&(u="",t=-1),{text:u,indexSuffix:t,autocompleteId:p,provider:o,model:a}}{let r=k[s];try{let s=await Promise.race([r({prompt:e,model:a,isSCM:t}),new Promise((e,t)=>setTimeout(()=>t(Error(`Request timed out for ${o} provider`)),5e3))]);if(u=function(e,t,r){function s(e,t,r="right"){let s=t.replace(/(\/\/\s.*|#\s.*)/g,"");if("right"===r){for(let t=0;t<e.length;t++)if(s.startsWith(e.slice(t)))return e.slice(0,t)}else if("left"===r){for(let t=e.length;t>=0;t--)if(s.endsWith(e.slice(0,t)))return e.slice(t)}return e}try{let n=t.prefix.split("\n").slice(-1)[0],i=e.replace(/\n+\s*$/,"");r&&(i=i.replace(/\`\`\`/g,"").replace(/\n/g,""),'"'===i[0]&&(i=i.slice(1)),'"'===i.slice(-1)&&(i=i.slice(0,-1)));let a=i.match(/^[ \t]*/);a&&1===a[0].length&&/\s/.test(n.slice(-1))&&(i=i.trimStart()),t.prefix.slice(-1)===i[0]&&"\n"===i[0]&&(i=i.slice(1)),i=s(i,n,"left"),t.suffix&&(i=s(i,t.suffix,"right"));let o=i.split("\n");return n.trim()===o[0].trim()&&""===o[0].trim()&&(o=(i=o.slice(1).join("\n").trimStart()).split("\n")),i.length>2&&((0,l.Ku)(i,t.prefix.split("\n").slice(-1*(o.length+1)).join("\n"))>.8||(0,l.Ku)(i,t.suffix.split("\n").slice(0,o.length+1).join("\n"))>.8)&&(console.log(`Redundant completion: ${i}`),i=""),i}catch(e){throw console.error("Error in cleanCompletion:",e.message),e}}(s.data.choices[0]?.text,e,t)){p=s.data.autocompleteId??"";let{indexSuffix:t,remainText:r}=f(u,e);return t>=0&&!u.slice(t).includes(r)&&(u="",t=-1),u&&c.Z.set(e,u,p),{text:u,indexSuffix:t,autocompleteId:p,provider:o,model:a}}}catch(e){return console.log(e.message),{text:"",indexSuffix:-1,autocompleteId:"",provider:o,model:a,error:e.message}}}return{text:"",indexSuffix:-1,autocompleteId:"",provider:o,model:a}}s()}catch(e){s(e)}})},38295:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{Z:()=>o});var n=r(82687),i=r(74167),a=e([n]);n=(a.then?(await a)():a)[0];let o=async({model:e,prompt:t})=>{let r="Human: You are a code completion AI designed to take the surrounding code and shared context into account in order to predict and suggest high-quality code to complete the code enclosed in <codeCompletion> tags. You only respond with code that works and fits seamlessly with surrounding code if any or use best practice and nothing else.\nAssistant: I am a code completion AI with exceptional context-awareness designed to auto-complete nested code blocks with high-quality code that seamlessly integrates with surrounding code.Please output the code within <codeCompletion></codeCompletion> tags.\nHuman: Below the code in unknown language. Review the code outside the XML tags to detect the functionality, formats, style, patterns, and logics in use. Then, use what you detect and reuse methods/libraries to complete and enclose completed code only inside XML tags precisely without duplicating existing implementations. Here is the code: \n```\n<codeCompletion>"+t.prefix+"</codeCompletion>\n\n```\n\nAssistant: <codeCompletion>",s=n.ZI.getByProvider("Anthropic")?.apikey;if(!s)throw Error("No API key found");let a=await fetch("https://api.anthropic.com/v1/complete",{method:"POST",headers:{"Content-Type":"application/json","x-api-key":s,"anthropic-version":"2023-06-01"},body:JSON.stringify({model:e,prompt:r,max_tokens_to_sample:i.Rm,temperature:.3,stop_sequences:["\n\n","\n   \n","\n    \n","\n	\n"],stream:!1})}).catch(e=>{throw Error(e)});if(!a.ok)throw Error("Error fetching completion");let o=await a.json();return{data:{choices:[{text:((e,t)=>{for(let r=0;r<e.length;r++)if(e.slice(r)===t.slice(0,e.length-r))return t.slice(e.length-r);return t})(t.prefix,o.completion).replace("</codeCompletion>","")}]}}};s()}catch(e){s(e)}})},80960:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{X:()=>u,k:()=>p});var n=r(74506),i=r(77807),a=r(82687),o=r(62200),l=r(74167),c=e([n,a,o]);[n,a,o]=c.then?(await c)():c;let u=async({model:e,prompt:t,isSCM:r})=>{let s=await (0,n.Z)(),a=await fetch(`${i.xf}/autocomplete`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},body:JSON.stringify({model:e,prompt:t.prefix,maxTokens:l.Rm,temperature:.3,stop:(0,o.zy)(t,r),suffix:t.suffix})});if(!a.ok){let e=await a.text();throw Error(e)}let c=await a.json();return{data:{choices:[{text:c.choices[0].text}],autocompleteId:c.autocompleteId}}},p=async({model:e,prompt:t,isSCM:r})=>{let s=a.ZI.getByProvider("CodeGPT Enterprise"),n=s?.custom_link,i=s?.apikey,c=await fetch(`${n}/autocomplete`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${i}`},body:JSON.stringify({prompt:t.prefix,model:e,maxTokens:l.Rm,temperature:.3,stop:(0,o.zy)(t,r),suffix:t.suffix})});if(!c.ok){let e=await c.text();throw Error(e)}let u=await c.json();return{data:{choices:[{text:u.choices[0].text}],autocompleteId:u.autocompleteId}}};s()}catch(e){s(e)}})},8072:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{G:()=>u});var n=r(38295),i=r(80960),a=r(11139),o=r(52150),l=r(22869),c=e([n,i,a,o,l]);[n,i,a,o,l]=c.then?(await c)():c;let u={codegpt:i.X,codegptEnterprise:i.k,mistral:a.Z,ollama:o.Z,openai:l.Z,anthropic:n.Z};s()}catch(e){s(e)}})},11139:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{Z:()=>l});var n=r(82687),i=r(62200),a=r(74167),o=e([n,i]);[n,i]=o.then?(await o)():o;let l=async({model:e,prompt:t,isSCM:r})=>{let s=n.ZI.getByProvider("Mistral")?.apikey;if(!s)throw Error("No API key found");let o=await fetch("https://api.mistral.ai/v1/fim/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${s}`},body:JSON.stringify({model:"codestral-latest",prompt:t.prefix,suffix:t.suffix,temperature:.3,stop:(0,i.zy)(t,r),max_tokens:a.Rm})});if(!o.ok){let e=await o.text();throw Error(e)}let l=await o.json();return{data:{choices:l.choices.map(e=>({text:e.message.content,finish_reason:e.finish_reason})),usage:l.usage}}};s()}catch(e){s(e)}})},52150:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{Z:()=>c});var n=r(82687),i=r(62200),a=r(74167),o=e([n,i]);[n,i]=o.then?(await o)():o;let l=new AbortController,c=async({model:e,prompt:t,isSCM:r})=>{l.abort(),l=new AbortController;let{prefix:s,suffix:o}=t,c=(e.split("/")[1]||e).split(":")[0],u=n.ZI.getByProvider("Ollama")?.custom_link,p=await fetch(`${u||"http://localhost:11434"}/api/generate`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({model:e,template:"{{ .Prompt }}{{ .Response }}",options:{stop:(0,i.zy)(t,r).concat({"deepseek-coder":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>"],"deepseek-coder-v2":["<｜fim▁begin｜>","<｜fim▁hole｜>","<｜fim▁end｜>"],starcoder2:["<fim_prefix>","<fim_suffix>","<fim_middle>","<file_sep>","<repo_name>"],codeqwen:["<fim_prefix>","<fim_suffix>","<fim_middle>","<file_sep>","<repo_name>"],"qwen2.5-coder":["<|fim_prefix|>","<|fim_suffix|>","<|fim_middle|>","<|file_sep|>","<|repo_name|>","<|endoftext|>","<|fim_pad|>","<|","\n``<|"],codellama:["<PRE> "," <SUF>"," <MID>"],codegemma:["<|fim_prefix|>","<|fim_suffix|>","<|fim_middle|>","<|file_separator|>"],codestral:["[SUFFIX]","[PREFIX]","[MIDDLE]","[TOOL_CALLS]","[/PREFIX]","[/SUFFIX]"],"replit-code-v1_5-3b":[]}[c]).filter(Boolean),temperature:-1,repeat_penalty:1,num_predict:a.Rm},prompt:{"deepseek-coder":o?"<｜fim▁begin｜>"+s+"<｜fim▁hole｜>"+o+"<｜fim▁end｜>":s,"deepseek-coder-v2":o?"<｜fim▁begin｜>"+s+"<｜fim▁hole｜>"+o+"<｜fim▁end｜>":s,starcoder2:o?"<fim_prefix>"+s+"<fim_suffix>"+o+"<fim_middle>":s,codeqwen:o?"<fim_prefix>"+s+"<fim_suffix>"+o+"<fim_middle>":s,"qwen2.5-coder":o?"<|fim_prefix|>"+s+"<|fim_suffix|>"+o+"<|fim_middle|>":s,codellama:o?"<PRE> "+s+" <SUF>"+o+" <MID>":s,codegemma:o?"<|fim_prefix|>"+s+"<|fim_suffix|>"+o+"<|fim_middle|>":s,codestral:o?"[SUFFIX]"+o+"[PREFIX]"+s:s,"replit-code-v1_5-3b":s}[c],stream:!1}),signal:l.signal}).catch(e=>{if("AbortError"===e.name)throw Error("Ollama aborted by the user");if(e.message.includes("fetch failed"))throw Error(`Fetch failed to URL ${u}`);throw Error(`Error fetching Ollama completion: ${e.name}`)});if(!p.ok){let e=await p.json();throw Error(e.error)}return{data:{choices:[{text:(await p.json()).response}]}}};s()}catch(e){s(e)}})},22869:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{Z:()=>c});var n=r(82687),i=r(62200),a=r(74167),o=r(13269),l=e([n,i]);[n,i]=l.then?(await l)():l;let c=async({model:e,prompt:t,isSCM:r})=>{let s=n.ZI.getByProvider("OpenAI")?.apikey;if(!s)throw Error("No API key found");let l=new o.ZP({apiKey:s}),c=await l.completions.create({model:e,prompt:t.prefix,suffix:t.suffix,max_tokens:a.Rm,temperature:0,stop:(0,i.zy)(t,r),stream:!1});return{data:{choices:c.choices.map(e=>({text:e.text,finish_reason:e.finish_reason})),usage:c.usage}}};s()}catch(e){s(e)}})},14564:(e,t,r)=>{let s,n;r.d(t,{o5:()=>nG});var i,a,o,l,c,u,p,d,h,m,f,g,b,y,k,w,v,x,_,T,E,S,O,j,A,C,I,M,P,R,D,$,q,L,N,B,F,G,U,z,H,X,Z,J,V,W,K,Q,Y,ee,et,er,es,en,ei,ea,eo,el,ec,eu,ep,ed,eh,em,ef,eg,eb,ey,ek,ew,ev,ex,e_,eT,eE,eS,eO,ej,eA,eC,eI,eM,eP,eR,eD,e$,eq,eL,eN,eB,eF,eG,eU,ez,eH,eX,eZ,eJ,eV,eW,eK,eQ,eY=r(39300),e0=r(19092),e1=r(61282),e2=r(68275),e3=r(15673),e8=Object.defineProperty,e7=Object.defineProperties,e5=Object.getOwnPropertyDescriptor,e4=Object.getOwnPropertyDescriptors,e6=Object.getOwnPropertyNames,e9=Object.getOwnPropertySymbols,te=Object.prototype.hasOwnProperty,tt=Object.prototype.propertyIsEnumerable,tr=(e,t,r)=>t in e?e8(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,ts=(e,t)=>{for(var r in t||(t={}))te.call(t,r)&&tr(e,r,t[r]);if(e9)for(var r of e9(t))tt.call(t,r)&&tr(e,r,t[r]);return e},tn=(e,t)=>e7(e,e4(t)),ti=(e,t)=>function(){return e&&(t=(0,e[e6(e)[0]])(e=0)),t},ta=(e,t)=>{for(var r in t)e8(e,r,{get:t[r],enumerable:!0})},to=(e,t,r,s)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let n of e6(t))te.call(e,n)||n===r||e8(e,n,{get:()=>t[n],enumerable:!(s=e5(t,n))||s.enumerable});return e},tl=e=>to(e8({},"__esModule",{value:!0}),e),tc=(e,t,r)=>new Promise((s,n)=>{var i=e=>{try{o(r.next(e))}catch(e){n(e)}},a=e=>{try{o(r.throw(e))}catch(e){n(e)}},o=e=>e.done?s(e.value):Promise.resolve(e.value).then(i,a);o((r=r.apply(e,t)).next())});function tu(e){return e instanceof String&&i.has(e)}function tp(e){return i.get(e)||[]}var td=ti({"src/lib/args/pathspec.ts"(){i=new WeakMap}}),th=ti({"src/lib/errors/git-error.ts"(){a=class extends Error{constructor(e,t){super(t),this.task=e,Object.setPrototypeOf(this,new.target.prototype)}}}}),tm=ti({"src/lib/errors/git-response-error.ts"(){th(),o=class extends a{constructor(e,t){super(void 0,t||String(e)),this.git=e}}}}),tf=ti({"src/lib/errors/task-configuration-error.ts"(){th(),l=class extends a{constructor(e){super(void 0,e)}}}});function tg(e){return"function"==typeof e?e:u}function tb(e){return"function"==typeof e&&e!==u}function ty(e,t){let r=e.indexOf(t);return r<=0?[e,""]:[e.substr(0,r),e.substr(r+1)]}function tk(e,t=0){return tv(e)&&e.length>t?e[t]:void 0}function tw(e,t=0){if(tv(e)&&e.length>t)return e[e.length-1-t]}function tv(e){return!!(e&&"number"==typeof e.length)}function tx(e="",t=!0,r="\n"){return e.split(r).reduce((e,r)=>{let s=t?r.trim():r;return s&&e.push(s),e},[])}function t_(e,t){return tx(e,!0).map(e=>t(e))}function tT(e){return(0,eY.exists)(e,eY.FOLDER)}function tE(e,t){return Array.isArray(e)?e.includes(t)||e.push(t):e.add(t),t}function tS(e,t){return Array.isArray(e)&&!e.includes(t)&&e.push(t),e}function tO(e,t){if(Array.isArray(e)){let r=e.indexOf(t);r>=0&&e.splice(r,1)}else e.delete(t);return t}function tj(e){return Array.isArray(e)?e:[e]}function tA(e){return e.replace(/[\s-]+(.)/g,(e,t)=>t.toUpperCase())}function tC(e){return tj(e).map(String)}function tI(e,t=0){if(null==e)return t;let r=parseInt(e,10);return isNaN(r)?t:r}function tM(e,t){let r=[];for(let s=0,n=e.length;s<n;s++)r.push(t,e[s]);return r}function tP(e){return(Array.isArray(e)?Buffer.concat(e):e).toString("utf-8")}function tR(e,t){return Object.assign({},...t.map(t=>t in e?{[t]:e[t]}:{}))}function tD(e=0){return new Promise(t=>setTimeout(t,e))}function t$(e){if(!1!==e)return e}var tq=ti({"src/lib/utils/util.ts"(){c="\0",u=()=>{},p=Object.prototype.toString.call.bind(Object.prototype.toString)}});function tL(e,t,r){return t(e)?e:arguments.length>2?r:void 0}function tN(e,t){let r=tu(e)?"string":typeof e;return/number|string|boolean/.test(r)&&(!t||!t.includes(r))}function tB(e){return!!e&&"[object Object]"===p(e)}function tF(e){return"function"==typeof e}var tG=ti({"src/lib/utils/argument-filters.ts"(){tq(),td(),d=e=>Array.isArray(e),h=e=>"string"==typeof e,m=e=>Array.isArray(e)&&e.every(h),f=e=>h(e)||Array.isArray(e)&&e.every(h),g=e=>!(null==e||"number|boolean|function".includes(typeof e))&&(Array.isArray(e)||"string"==typeof e||"number"==typeof e.length)}}),tU=ti({"src/lib/utils/exit-codes.ts"(){var e;(e=b||{})[e.SUCCESS=0]="SUCCESS",e[e.ERROR=1]="ERROR",e[e.NOT_FOUND=-2]="NOT_FOUND",e[e.UNCLEAN=128]="UNCLEAN",b=e}}),tz=ti({"src/lib/utils/git-output-streams.ts"(){y=class{constructor(e,t){this.stdOut=e,this.stdErr=t}asStrings(){return new y(this.stdOut.toString("utf8"),this.stdErr.toString("utf8"))}}}}),tH=ti({"src/lib/utils/line-parser.ts"(){k=class{constructor(e,t){this.matches=[],this.parse=(e,t)=>(this.resetMatches(),!!this._regExp.every((t,r)=>this.addMatch(t,r,e(r)))&&!1!==this.useMatches(t,this.prepareMatches())),this._regExp=Array.isArray(e)?e:[e],t&&(this.useMatches=t)}useMatches(e,t){throw Error("LineParser:useMatches not implemented")}resetMatches(){this.matches.length=0}prepareMatches(){return this.matches}addMatch(e,t,r){let s=r&&e.exec(r);return s&&this.pushMatch(t,s),!!s}pushMatch(e,t){this.matches.push(...t.slice(1))}},w=class extends k{addMatch(e,t,r){return/^remote:\s/.test(String(r))&&super.addMatch(e,t,r)}pushMatch(e,t){(e>0||t.length>1)&&super.pushMatch(e,t)}}}});function tX(...e){let t=process.cwd(),r=Object.assign(ts({baseDir:t},v),...e.filter(e=>"object"==typeof e&&e));return r.baseDir=r.baseDir||t,r.trimmed=!0===r.trimmed,r}var tZ=ti({"src/lib/utils/simple-git-options.ts"(){v={binary:"git",maxConcurrentProcesses:5,config:[],trimmed:!1}}});function tJ(e,t=[]){return tB(e)?Object.keys(e).reduce((t,r)=>{let s=e[r];return tu(s)?t.push(s):tN(s,["boolean"])?t.push(r+"="+s):t.push(r),t},t):t}function tV(e,t=0,r=!1){let s=[];for(let r=0,n=t<0?e.length:t;r<n;r++)"string|number".includes(typeof e[r])&&s.push(String(e[r]));return tJ(tW(e),s),r||s.push(...function(e){let t="function"==typeof tw(e);return tL(tw(e,t?1:0),d,[])}(e)),s}function tW(e){let t=tF(tw(e));return tL(tw(e,t?1:0),tB)}function tK(e,t=!0){let r=tg(tw(e));return t||tb(r)?r:void 0}var tQ=ti({"src/lib/utils/task-options.ts"(){tG(),tq(),td()}});function tY(e,t){return e(t.stdOut,t.stdErr)}function t0(e,t,r,s=!0){return tj(r).forEach(r=>{for(let n=tx(r,s),i=0,a=n.length;i<a;i++){let r=(e=0)=>{if(!(i+e>=a))return n[i+e]};t.some(({parse:t})=>t(r,e))}}),e}var t1=ti({"src/lib/utils/task-parser.ts"(){tq()}}),t2={};ta(t2,{ExitCodes:()=>b,GitOutputStreams:()=>y,LineParser:()=>k,NOOP:()=>u,NULL:()=>c,RemoteLineParser:()=>w,append:()=>tE,appendTaskOptions:()=>tJ,asArray:()=>tj,asCamelCase:()=>tA,asFunction:()=>tg,asNumber:()=>tI,asStringArray:()=>tC,bufferToString:()=>tP,callTaskParser:()=>tY,createInstanceConfig:()=>tX,delay:()=>tD,filterArray:()=>d,filterFunction:()=>tF,filterHasLength:()=>g,filterPlainObject:()=>tB,filterPrimitives:()=>tN,filterString:()=>h,filterStringArray:()=>m,filterStringOrStringArray:()=>f,filterType:()=>tL,first:()=>tk,folderExists:()=>tT,forEachLineWithContent:()=>t_,getTrailingOptions:()=>tV,including:()=>tS,isUserFunction:()=>tb,last:()=>tw,objectToString:()=>p,orVoid:()=>t$,parseStringResponse:()=>t0,pick:()=>tR,prefixedArray:()=>tM,remove:()=>tO,splitOn:()=>ty,toLinesWithContent:()=>tx,trailingFunctionArgument:()=>tK,trailingOptionsArgument:()=>tW});var t3=ti({"src/lib/utils/index.ts"(){tG(),tU(),tz(),tH(),tZ(),tQ(),t1(),tq()}}),t8={};function t7(e){switch(e){case"bare":return t4();case"root":return t5()}return{commands:["rev-parse","--is-inside-work-tree"],format:"utf-8",onError:_,parser:T}}function t5(){return{commands:["rev-parse","--git-dir"],format:"utf-8",onError:_,parser:e=>/^\.(git)?$/.test(e.trim())}}function t4(){return{commands:["rev-parse","--is-bare-repository"],format:"utf-8",onError:_,parser:T}}ta(t8,{CheckRepoActions:()=>x,checkIsBareRepoTask:()=>t4,checkIsRepoRootTask:()=>t5,checkIsRepoTask:()=>t7});var t6=ti({"src/lib/tasks/check-is-repo.ts"(){var e;t3(),(e=x||{}).BARE="bare",e.IN_TREE="tree",e.IS_REPO_ROOT="root",x=e,_=({exitCode:e},t,r,s)=>{if(128===e&&/(Not a git repository|Kein Git-Repository)/i.test(String(t)))return r(Buffer.from("false"));s(t)},T=e=>"true"===e.trim()}}),t9=ti({"src/lib/responses/CleanSummary.ts"(){t3(),E=class{constructor(e){this.dryRun=e,this.paths=[],this.files=[],this.folders=[]}},S=/^[a-z]+\s*/i,O=/^[a-z]+\s+[a-z]+\s*/i,j=/\/$/}}),re={};function rt(e){return{commands:A,format:"empty",parser:e}}function rr(e){return{commands:A,format:"empty",parser(){throw"string"==typeof e?new l(e):e}}}function rs(e,t=!1){return{commands:e,format:"utf-8",parser:e=>t?String(e).trim():e}}function rn(e){return{commands:e,format:"buffer",parser:e=>e}}function ri(e){return"buffer"===e.format}function ra(e){return"empty"===e.format||!e.commands.length}ta(re,{EMPTY_COMMANDS:()=>A,adhocExecTask:()=>rt,configurationErrorTask:()=>rr,isBufferTask:()=>ri,isEmptyTask:()=>ra,straightThroughBufferTask:()=>rn,straightThroughStringTask:()=>rs});var ro=ti({"src/lib/tasks/task.ts"(){tf(),A=[]}}),rl={};function rc(e,t){let r,s,n;let{cleanMode:i,options:a,valid:o}=(s=[],n={cleanMode:!1,options:!0},e.replace(/[^a-z]i/g,"").split("").forEach(e=>{var t;"f"===e||"n"===e?(r=e,n.cleanMode=!0):n.options=n.options&&(t=s[s.length]=`-${e}`,/^-[a-z]$/i.test(t)&&R.has(t.charAt(1)))}),{cleanMode:r,options:s,valid:n});return i?o.options?(a.push(...t),a.some(rd))?rr(C):ru(i,a):rr(M+JSON.stringify(e)):rr(I)}function ru(e,t){return{commands:["clean",`-${e}`,...t],format:"utf-8",parser:t=>(function(e,t){let r=new E(e),s=e?O:S;return tx(t).forEach(e=>{let t=e.replace(s,"");r.paths.push(t),(j.test(t)?r.folders:r.files).push(t)}),r})("n"===e,t)}}function rp(e){return Array.isArray(e)&&e.every(e=>R.has(e))}function rd(e){return/^-[^\-]/.test(e)?e.indexOf("i")>0:"--interactive"===e}ta(rl,{CONFIG_ERROR_INTERACTIVE_MODE:()=>C,CONFIG_ERROR_MODE_REQUIRED:()=>I,CONFIG_ERROR_UNKNOWN_OPTION:()=>M,CleanOptions:()=>P,cleanTask:()=>ru,cleanWithOptionsTask:()=>rc,isCleanOptionsArray:()=>rp});var rh=ti({"src/lib/tasks/clean.ts"(){var e;t9(),t3(),ro(),C="Git clean interactive mode is not supported",I='Git clean mode parameter ("n" or "f") is required',M="Git clean unknown option found in: ",(e=P||{}).DRY_RUN="n",e.FORCE="f",e.IGNORED_INCLUDED="x",e.IGNORED_ONLY="X",e.EXCLUDING="e",e.QUIET="q",e.RECURSIVE="d",R=new Set(["i",...tC(Object.values(P=e))])}});function*rm(e,t=null){let r=e.split("\0");for(let e=0,s=r.length-1;e<s;){let s=r[e++].replace(/^(file):/,""),n=r[e++],i=t;if(n.includes("\n")){let e=ty(n,"\n");i=e[0],n=e[1]}yield{file:s,key:i,value:n}}}var rf=ti({"src/lib/responses/ConfigList.ts"(){t3(),D=class{constructor(){this.files=[],this.values=Object.create(null)}get all(){return this._all||(this._all=this.files.reduce((e,t)=>Object.assign(e,this.values[t]),{})),this._all}addFile(e){if(!(e in this.values)){let t=tw(this.files);this.values[e]=t?Object.create(this.values[t]):{},this.files.push(e)}return this.values[e]}addValue(e,t,r){let s=this.addFile(e);s.hasOwnProperty(t)?Array.isArray(s[t])?s[t].push(r):s[t]=[s[t],r]:s[t]=r,this._all=void 0}}}});function rg(e,t){return"string"==typeof e&&$.hasOwnProperty(e)?e:t}var rb=ti({"src/lib/tasks/config.ts"(){var e;rf(),t3(),(e=$||{}).system="system",e.global="global",e.local="local",e.worktree="worktree",$=e}}),ry=ti({"src/lib/tasks/diff-name-status.ts"(){var e;(e=q||{}).ADDED="A",e.COPIED="C",e.DELETED="D",e.MODIFIED="M",e.RENAMED="R",e.CHANGED="T",e.UNMERGED="U",e.UNKNOWN="X",e.BROKEN="B",L=new Set(Object.values(q=e))}}),rk=ti({"src/lib/tasks/grep.ts"(){t3(),ro(),N=["-h"],B=Symbol("grepQuery"),G=class{constructor(){this[F]=[]}*[(F=B,Symbol.iterator)](){for(let e of this[B])yield e}and(...e){return e.length&&this[B].push("--and","(",...tM(e,"-e"),")"),this}param(...e){return this[B].push(...tM(e,"-e")),this}}}}),rw={};function rv(e,t){let r=["reset"];return r_(e)&&r.push(`--${e}`),r.push(...t),rs(r)}function rx(e){if(r_(e))return e;switch(typeof e){case"string":case"undefined":return"soft"}}function r_(e){return z.includes(e)}ta(rw,{ResetMode:()=>U,getResetMode:()=>rx,resetTask:()=>rv});var rT=ti({"src/lib/tasks/reset.ts"(){var e;ro(),(e=U||{}).MIXED="mixed",e.SOFT="soft",e.HARD="hard",e.MERGE="merge",e.KEEP="keep",z=Array.from(Object.values(U=e))}});function rE(e,t,r){return t&&String(t).replace(/\s*/,"")?(s,...n)=>{e(`%s ${s}`,t,...n),r&&r(s,...n)}:r?(t,...s)=>{e(t,...s),r(t,...s)}:e}function rS(e,t,r,s=e0("simple-git")){let n=e&&`[${e}]`||"",i=[],a="string"==typeof t?s.extend(t):t,o=function(e,t,{namespace:r}){if("string"==typeof e)return e;let s=t&&t.namespace||"";return s.startsWith(r)?s.substr(r.length+1):s||r}(tL(t,h),a,s);return function t(r){let i=r&&`[${r}]`||"",o=a&&rE(a,i)||u,c=rE(s,`${n} ${i}`,o);return Object.assign(a?o:c,{label:e,sibling:l,info:c,step:t})}(r);function l(t,r){return tE(i,rS(e,o.replace(/^[^:]+/,t),r,s))}}var rO=ti({"src/lib/git-logger.ts"(){t3(),e0.formatters.L=e=>String(g(e)?e.length:"-"),e0.formatters.B=e=>Buffer.isBuffer(e)?e.toString("utf8"):p(e)}}),rj=ti({"src/lib/runners/tasks-pending-queue.ts"(){th(),rO(),(X=H=class{constructor(e="GitExecutor"){this.logLabel=e,this._queue=new Map}withProgress(e){return this._queue.get(e)}createProgress(e){let t=H.getName(e.commands[0]);return{task:e,logger:rS(this.logLabel,t),name:t}}push(e){let t=this.createProgress(e);return t.logger("Adding task to the queue, commands = %o",e.commands),this._queue.set(e,t),t}fatal(e){for(let[t,{logger:r}]of Array.from(this._queue.entries()))t===e.task?(r.info("Failed %o",e),r("Fatal exception, any as-yet un-started tasks run through this executor will not be attempted")):r.info("A fatal exception occurred in a previous task, the queue has been purged: %o",e.message),this.complete(t);if(0!==this._queue.size)throw Error(`Queue size should be zero after fatal: ${this._queue.size}`)}complete(e){this.withProgress(e)&&this._queue.delete(e)}attempt(e){let t=this.withProgress(e);if(!t)throw new a(void 0,"TasksPendingQueue: attempt called for an unknown task");return t.logger("Starting task"),t}static getName(e="empty"){return`task:${e}:${++H.counter}`}}).counter=0}});function rA(e,t){return{method:tk(e.commands)||"",commands:t}}function rC(e,t,r,s){return n=>{r("%s received %L bytes",t,n),s("%B",n),e.push(n)}}var rI=ti({"src/lib/runners/git-executor-chain.ts"(){th(),ro(),t3(),rj(),Z=class{constructor(e,t,r){this._executor=e,this._scheduler=t,this._plugins=r,this._chain=Promise.resolve(),this._queue=new X}get cwd(){return this._cwd||this._executor.cwd}set cwd(e){this._cwd=e}get env(){return this._executor.env}get outputHandler(){return this._executor.outputHandler}chain(){return this}push(e){return this._queue.push(e),this._chain=this._chain.then(()=>this.attemptTask(e))}attemptTask(e){return tc(this,null,function*(){let t=yield this._scheduler.next();try{let{logger:t}=this._queue.attempt(e);return yield ra(e)?this.attemptEmptyTask(e,t):this.attemptRemoteTask(e,t)}catch(t){throw this.onFatalException(e,t)}finally{this._queue.complete(e),t()}})}onFatalException(e,t){let r=t instanceof a?Object.assign(t,{task:e}):new a(e,t&&String(t));return this._chain=Promise.resolve(),this._queue.fatal(r),r}attemptRemoteTask(e,t){return tc(this,null,function*(){let r=this._plugins.exec("spawn.binary","",rA(e,e.commands)),s=this._plugins.exec("spawn.args",[...e.commands],rA(e,e.commands)),n=yield this.gitResponse(e,r,s,this.outputHandler,t.step("SPAWN")),i=yield this.handleTaskData(e,s,n,t.step("HANDLE"));return(t("passing response to task's parser as a %s",e.format),ri(e))?tY(e.parser,i):tY(e.parser,i.asStrings())})}attemptEmptyTask(e,t){return tc(this,null,function*(){return t("empty task bypassing child process to call to task's parser"),e.parser(this)})}handleTaskData(e,t,r,s){let{exitCode:n,rejection:i,stdOut:a,stdErr:o}=r;return new Promise((l,c)=>{s("Preparing to handle process response exitCode=%d stdOut=",n);let{error:u}=this._plugins.exec("task.error",{error:i},ts(ts({},rA(e,t)),r));return u&&e.onError?(s.info("exitCode=%s handling with custom error handler"),e.onError(r,u,e=>{s.info("custom error handler treated as success"),s("custom error returned a %s",p(e)),l(new y(Array.isArray(e)?Buffer.concat(e):e,Buffer.concat(o)))},c)):u?(s.info("handling as error: exitCode=%s stdErr=%s rejection=%o",n,o.length,i),c(u)):void(s.info("retrieving task output complete"),l(new y(Buffer.concat(a),Buffer.concat(o))))})}gitResponse(e,t,r,s,n){return tc(this,null,function*(){let i=n.sibling("output"),a=this._plugins.exec("spawn.options",{cwd:this.cwd,env:this.env,windowsHide:!0},rA(e,e.commands));return new Promise(o=>{let l=[],c=[];n.info("%s %o",t,r),n("%O",a);let u=this._beforeSpawn(e,r);if(u)return o({stdOut:l,stdErr:c,exitCode:9901,rejection:u});this._plugins.exec("spawn.before",void 0,tn(ts({},rA(e,r)),{kill(e){u=e||u}}));let p=(0,e1.spawn)(t,r,a);p.stdout.on("data",rC(l,"stdOut",n,i.step("stdOut"))),p.stderr.on("data",rC(c,"stdErr",n,i.step("stdErr"))),p.on("error",e=>{n("[ERROR] child process exception %o",e),c.push(Buffer.from(String(e.stack),"ascii"))}),s&&(n("Passing child process stdOut/stdErr to custom outputHandler"),s(t,p.stdout,p.stderr,[...r])),this._plugins.exec("spawn.after",void 0,tn(ts({},rA(e,r)),{spawned:p,close(e,t){o({stdOut:l,stdErr:c,exitCode:e,rejection:u||t})},kill(e){p.killed||(u=e,p.kill("SIGINT"))}}))})})}_beforeSpawn(e,t){let r;return this._plugins.exec("spawn.before",void 0,tn(ts({},rA(e,t)),{kill(e){r=e||r}})),r}}}}),rM={};ta(rM,{GitExecutor:()=>J});var rP=ti({"src/lib/runners/git-executor.ts"(){rI(),J=class{constructor(e,t,r){this.cwd=e,this._scheduler=t,this._plugins=r,this._chain=new Z(this,this._scheduler,this._plugins)}chain(){return new Z(this,this._scheduler,this._plugins)}push(e){return this._chain.push(e)}}}}),rR=ti({"src/lib/task-callback.ts"(){tm(),t3()}});function rD(e,t){return rt(r=>{if(!tT(e))throw Error(`Git.cwd: cannot change to non-directory "${e}"`);return(t||r).cwd=e})}var r$=ti({"src/lib/tasks/change-working-directory.ts"(){t3(),ro()}});function rq(e){let t=["checkout",...e];return"-b"===t[1]&&t.includes("-B")&&(t[1]=tO(t,"-B")),rs(t)}var rL=ti({"src/lib/tasks/checkout.ts"(){t3(),ro()}}),rN=ti({"src/lib/tasks/count-objects.ts"(){t3(),V=new k(/([a-z-]+): (\d+)$/,(e,[t,r])=>{let s=tA(t);e.hasOwnProperty(s)&&(e[s]=tI(r))})}});function rB(e){return t0({author:null,branch:"",commit:"",root:!1,summary:{changes:0,insertions:0,deletions:0}},W,e)}var rF=ti({"src/lib/parsers/parse-commit.ts"(){t3(),W=[new k(/^\[([^\s]+)( \([^)]+\))? ([^\]]+)/,(e,[t,r,s])=>{e.branch=t,e.commit=s,e.root=!!r}),new k(/\s*Author:\s(.+)/i,(e,[t])=>{let r=t.split("<"),s=r.pop();s&&s.includes("@")&&(e.author={email:s.substr(0,s.length-1),name:r.join("<").trim()})}),new k(/(\d+)[^,]*(?:,\s*(\d+)[^,]*)(?:,\s*(\d+))/g,(e,[t,r,s])=>{e.summary.changes=parseInt(t,10)||0,e.summary.insertions=parseInt(r,10)||0,e.summary.deletions=parseInt(s,10)||0}),new k(/^(\d+)[^,]*(?:,\s*(\d+)[^(]+\(([+-]))?/,(e,[t,r,s])=>{e.summary.changes=parseInt(t,10)||0;let n=parseInt(r,10)||0;"-"===s?e.summary.deletions=n:"+"===s&&(e.summary.insertions=n)})]}}),rG=ti({"src/lib/tasks/commit.ts"(){rF(),t3(),ro()}}),rU=ti({"src/lib/tasks/first-commit.ts"(){t3(),ro()}}),rz=ti({"src/lib/tasks/hash-object.ts"(){ro()}}),rH=ti({"src/lib/responses/InitSummary.ts"(){K=class{constructor(e,t,r,s){this.bare=e,this.path=t,this.existing=r,this.gitDir=s}},Q=/^Init.+ repository in (.+)$/,Y=/^Rein.+ in (.+)$/}}),rX=ti({"src/lib/tasks/init.ts"(){rH(),ee="--bare"}});function rZ(e){for(let t=0;t<e.length;t++){let r=et.exec(e[t]);if(r)return`--${r[1]}`}return""}function rJ(e){return et.test(e)}var rV=ti({"src/lib/args/log-format.ts"(){et=/^--(stat|numstat|name-only|name-status)(=|$)/}}),rW=ti({"src/lib/responses/DiffSummary.ts"(){er=class{constructor(){this.changed=0,this.deletions=0,this.insertions=0,this.files=[]}}}});function rK(e=""){let t=ea[e];return e=>t0(new er,t,e,!1)}var rQ=ti({"src/lib/parsers/parse-diff-summary.ts"(){rV(),rW(),ry(),t3(),es=[new k(/^(.+)\s+\|\s+(\d+)(\s+[+\-]+)?$/,(e,[t,r,s=""])=>{e.files.push({file:t.trim(),changes:tI(r),insertions:s.replace(/[^+]/g,"").length,deletions:s.replace(/[^-]/g,"").length,binary:!1})}),new k(/^(.+) \|\s+Bin ([0-9.]+) -> ([0-9.]+) ([a-z]+)/,(e,[t,r,s])=>{e.files.push({file:t.trim(),before:tI(r),after:tI(s),binary:!0})}),new k(/(\d+) files? changed\s*((?:, \d+ [^,]+){0,2})/,(e,[t,r])=>{let s=/(\d+) i/.exec(r),n=/(\d+) d/.exec(r);e.changed=tI(t),e.insertions=tI(null==s?void 0:s[1]),e.deletions=tI(null==n?void 0:n[1])})],en=[new k(/(\d+)\t(\d+)\t(.+)$/,(e,[t,r,s])=>{let n=tI(t),i=tI(r);e.changed++,e.insertions+=n,e.deletions+=i,e.files.push({file:s,changes:n+i,insertions:n,deletions:i,binary:!1})}),new k(/-\t-\t(.+)$/,(e,[t])=>{e.changed++,e.files.push({file:t,after:0,before:0,binary:!0})})],ei=[new k(/(.+)$/,(e,[t])=>{e.changed++,e.files.push({file:t,changes:0,insertions:0,deletions:0,binary:!1})})],ea={"":es,"--stat":es,"--numstat":en,"--name-status":[new k(/([ACDMRTUXB])([0-9]{0,3})\t(.[^\t]*)(\t(.[^\t]*))?$/,(e,[t,r,s,n,i])=>{e.changed++,e.files.push({file:null!=i?i:s,changes:0,insertions:0,deletions:0,binary:!1,status:t$(L.has(t)&&t),from:t$(!!i&&s!==i&&s),similarity:tI(r)})})],"--name-only":ei}}});function rY(e=ec,t=eu,r=""){let s=rK(r);return function(r){let n=tx(r.trim(),!1,eo).map(function(r){var n;let i=r.split(el),a=(n=i[0].split(e),t.reduce((e,t,r)=>(e[t]=n[r]||"",e),Object.create({diff:null})));return i.length>1&&i[1].trim()&&(a.diff=s(i[1])),a});return{all:n,latest:n.length&&n[0]||null,total:n.length}}}var r0=ti({"src/lib/parsers/parse-list-log-summary.ts"(){t3(),rQ(),rV(),eo="\xf2\xf2\xf2\xf2\xf2\xf2 ",el=" \xf2\xf2",ec=" \xf2 ",eu=["hash","date","message","refs","author_name","author_email"]}}),r1={};function r2(e){let t=rZ(e),r=["diff"];return""===t&&(t="--stat",r.push("--stat=4096")),r.push(...e),r3(r)||{commands:r,format:"utf-8",parser:rK(t)}}function r3(e){let t=e.filter(rJ);return t.length>1?rr(`Summary flags are mutually exclusive - pick one of ${t.join(",")}`):t.length&&e.includes("-z")?rr(`Summary flag ${t} parsing is not compatible with null termination option '-z'`):void 0}ta(r1,{diffSummaryTask:()=>r2,validateLogFormatConfig:()=>r3});var r8=ti({"src/lib/tasks/diff.ts"(){rV(),rQ(),ro()}});function r7(e={},t=[]){let r=tL(e.splitter,h,ec),[s,n]=function(e,t){let r=[],s=[];return Object.keys(e).forEach(t=>{r.push(t),s.push(String(e[t]))}),[r,s.join(t)]}(!tN(e.format)&&e.format?e.format:{hash:"%H",date:!1===e.strictDate?"%ai":"%aI",message:"%s",refs:"%D",body:e.multiLine?"%B":"%b",author_name:!1!==e.mailMap?"%aN":"%an",author_email:!1!==e.mailMap?"%aE":"%ae"},r),a=[],o=[`--pretty=format:${eo}${n}${el}`,...t],l=e.n||e["max-count"]||e.maxCount;if(l&&o.push(`--max-count=${l}`),e.from||e.to){let t=!1!==e.symmetric?"...":"..";a.push(`${e.from||""}${t}${e.to||""}`)}return h(e.file)&&o.push("--follow",function(...e){let t=new String(e);return i.set(t,e),t}(e.file)),tJ(Object.keys(e).reduce((t,r)=>(r in ep||(t[r]=e[r]),t),{}),o),{fields:s,splitter:r,commands:[...o,...a]}}var r5=ti({"src/lib/tasks/log.ts"(){var e;rV(),td(),r0(),t3(),ro(),r8(),(e=ep||{})[e["--pretty"]=0]="--pretty",e[e["max-count"]=1]="max-count",e[e.maxCount=2]="maxCount",e[e.n=3]="n",e[e.file=4]="file",e[e.format=5]="format",e[e.from=6]="from",e[e.to=7]="to",e[e.splitter=8]="splitter",e[e.symmetric=9]="symmetric",e[e.mailMap=10]="mailMap",e[e.multiLine=11]="multiLine",e[e.strictDate=12]="strictDate",ep=e}}),r4=ti({"src/lib/responses/MergeSummary.ts"(){ed=class{constructor(e,t=null,r){this.reason=e,this.file=t,this.meta=r}toString(){return`${this.file}:${this.reason}`}},eh=class{constructor(){this.conflicts=[],this.merges=[],this.result="success"}get failed(){return this.conflicts.length>0}get reason(){return this.result}toString(){return this.conflicts.length?`CONFLICTS: ${this.conflicts.join(", ")}`:"OK"}}}}),r6=ti({"src/lib/responses/PullSummary.ts"(){em=class{constructor(){this.remoteMessages={all:[]},this.created=[],this.deleted=[],this.files=[],this.deletions={},this.insertions={},this.summary={changes:0,deletions:0,insertions:0}}},ef=class{constructor(){this.remote="",this.hash={local:"",remote:""},this.branch={local:"",remote:""},this.message=""}toString(){return this.message}}}});function r9(e){return e.objects=e.objects||{compressing:0,counting:0,enumerating:0,packReused:0,reused:{count:0,delta:0},total:{count:0,delta:0}}}function se(e){let t=/^\s*(\d+)/.exec(e),r=/delta (\d+)/i.exec(e);return{count:tI(t&&t[1]||"0"),delta:tI(r&&r[1]||"0")}}var st=ti({"src/lib/parsers/parse-remote-objects.ts"(){t3(),eg=[new w(/^remote:\s*(enumerating|counting|compressing) objects: (\d+),/i,(e,[t,r])=>{let s=t.toLowerCase();Object.assign(r9(e.remoteMessages),{[s]:tI(r)})}),new w(/^remote:\s*(enumerating|counting|compressing) objects: \d+% \(\d+\/(\d+)\),/i,(e,[t,r])=>{let s=t.toLowerCase();Object.assign(r9(e.remoteMessages),{[s]:tI(r)})}),new w(/total ([^,]+), reused ([^,]+), pack-reused (\d+)/i,(e,[t,r,s])=>{let n=r9(e.remoteMessages);n.total=se(t),n.reused=se(r),n.packReused=tI(s)})]}});function sr(e,t){return t0({remoteMessages:new ey},eb,t)}var ss=ti({"src/lib/parsers/parse-remote-messages.ts"(){t3(),st(),eb=[new w(/^remote:\s*(.+)$/,(e,[t])=>(e.remoteMessages.all.push(t.trim()),!1)),...eg,new w([/create a (?:pull|merge) request/i,/\s(https?:\/\/\S+)$/],(e,[t])=>{e.remoteMessages.pullRequestUrl=t}),new w([/found (\d+) vulnerabilities.+\(([^)]+)\)/i,/\s(https?:\/\/\S+)$/],(e,[t,r,s])=>{e.remoteMessages.vulnerabilities={count:tI(t),summary:r,url:s}})],ey=class{constructor(){this.all=[]}}}}),sn=ti({"src/lib/parsers/parse-pull.ts"(){r6(),t3(),ss(),ek=/(\d+)\D+((\d+)\D+\(\+\))?(\D+(\d+)\D+\(-\))?/,ew=/^(create|delete) mode \d+ (.+)/,ev=[new k(/^\s*(.+?)\s+\|\s+\d+\s*(\+*)(-*)/,(e,[t,r,s])=>{e.files.push(t),r&&(e.insertions[t]=r.length),s&&(e.deletions[t]=s.length)}),new k(ek,(e,[t,,r,,s])=>(void 0!==r||void 0!==s)&&(e.summary.changes=+t||0,e.summary.insertions=+r||0,e.summary.deletions=+s||0,!0)),new k(ew,(e,[t,r])=>{tE(e.files,r),tE("create"===t?e.created:e.deleted,r)})],ex=[new k(/^from\s(.+)$/i,(e,[t])=>void(e.remote=t)),new k(/^fatal:\s(.+)$/,(e,[t])=>void(e.message=t)),new k(/([a-z0-9]+)\.\.([a-z0-9]+)\s+(\S+)\s+->\s+(\S+)$/,(e,[t,r,s,n])=>{e.branch.local=s,e.hash.local=t,e.branch.remote=n,e.hash.remote=r})],e_=(e,t)=>t0(new em,ev,[e,t]),eT=(e,t)=>Object.assign(new em,e_(e,t),sr(e,t))}}),si=ti({"src/lib/parsers/parse-merge.ts"(){r4(),t3(),sn(),eE=[new k(/^Auto-merging\s+(.+)$/,(e,[t])=>{e.merges.push(t)}),new k(/^CONFLICT\s+\((.+)\): Merge conflict in (.+)$/,(e,[t,r])=>{e.conflicts.push(new ed(t,r))}),new k(/^CONFLICT\s+\((.+\/delete)\): (.+) deleted in (.+) and/,(e,[t,r,s])=>{e.conflicts.push(new ed(t,r,{deleteRef:s}))}),new k(/^CONFLICT\s+\((.+)\):/,(e,[t])=>{e.conflicts.push(new ed(t,null))}),new k(/^Automatic merge failed;\s+(.+)$/,(e,[t])=>{e.result=t})],eS=(e,t)=>Object.assign(eO(e,t),eT(e,t)),eO=e=>t0(new eh,eE,e)}});function sa(e){return e.length?{commands:["merge",...e],format:"utf-8",parser(e,t){let r=eS(e,t);if(r.failed)throw new o(r);return r}}:rr("Git.merge requires at least one option")}var so=ti({"src/lib/tasks/merge.ts"(){tm(),si(),ro()}}),sl=ti({"src/lib/parsers/parse-push.ts"(){t3(),ss(),ej=[new k(/^Pushing to (.+)$/,(e,[t])=>{e.repo=t}),new k(/^updating local tracking ref '(.+)'/,(e,[t])=>{e.ref=tn(ts({},e.ref||{}),{local:t})}),new k(/^[=*-]\s+([^:]+):(\S+)\s+\[(.+)]$/,(e,[t,r,s])=>{e.pushed.push(function(e,t,r){let s=r.includes("deleted"),n=r.includes("tag")||/^refs\/tags/.test(e),i=!r.includes("new");return{deleted:s,tag:n,branch:!n,new:!i,alreadyUpdated:i,local:e,remote:t}}(t,r,s))}),new k(/^Branch '([^']+)' set up to track remote branch '([^']+)' from '([^']+)'/,(e,[t,r,s])=>{e.branch=tn(ts({},e.branch||{}),{local:t,remote:r,remoteName:s})}),new k(/^([^:]+):(\S+)\s+([a-z0-9]+)\.\.([a-z0-9]+)$/,(e,[t,r,s,n])=>{e.update={head:{local:t,remote:r},hash:{from:s,to:n}}})],eA=(e,t)=>{let r=eC(e,t),s=sr(e,t);return ts(ts({},r),s)},eC=(e,t)=>t0({pushed:[]},ej,[e,t])}}),sc={};function su(e={},t){return tE(t,"--tags"),sp(e,t)}function sp(e={},t){let r=["push",...t];return e.branch&&r.splice(1,0,e.branch),e.remote&&r.splice(1,0,e.remote),tO(r,"-v"),tE(r,"--verbose"),tE(r,"--porcelain"),{commands:r,format:"utf-8",parser:eA}}ta(sc,{pushTagsTask:()=>su,pushTask:()=>sp});var sd=ti({"src/lib/tasks/push.ts"(){sl(),t3()}}),sh=ti({"src/lib/tasks/show.ts"(){t3(),ro()}}),sm=ti({"src/lib/responses/FileStatusSummary.ts"(){eI=/^(.+)\0(.+)$/,eM=class{constructor(e,t,r){if(this.path=e,this.index=t,this.working_dir=r,"R"===t||"R"===r){let t=eI.exec(e)||[null,e,e];this.from=t[2]||"",this.path=t[1]||""}}}}});function sf(e){let[t,r]=e.split(c);return{from:r||t,to:t}}function sg(e,t,r){return[`${e}${t}`,r]}function sb(e,...t){return t.map(t=>sg(e,t,(e,t)=>tE(e.conflicted,t)))}var sy=ti({"src/lib/responses/StatusSummary.ts"(){t3(),sm(),eP=class{constructor(){this.not_added=[],this.conflicted=[],this.created=[],this.deleted=[],this.ignored=void 0,this.modified=[],this.renamed=[],this.files=[],this.staged=[],this.ahead=0,this.behind=0,this.current=null,this.tracking=null,this.detached=!1,this.isClean=()=>!this.files.length}},eR=new Map([sg(" ","A",(e,t)=>tE(e.created,t)),sg(" ","D",(e,t)=>tE(e.deleted,t)),sg(" ","M",(e,t)=>tE(e.modified,t)),sg("A"," ",(e,t)=>tE(e.created,t)&&tE(e.staged,t)),sg("A","M",(e,t)=>tE(e.created,t)&&tE(e.staged,t)&&tE(e.modified,t)),sg("D"," ",(e,t)=>tE(e.deleted,t)&&tE(e.staged,t)),sg("M"," ",(e,t)=>tE(e.modified,t)&&tE(e.staged,t)),sg("M","M",(e,t)=>tE(e.modified,t)&&tE(e.staged,t)),sg("R"," ",(e,t)=>{tE(e.renamed,sf(t))}),sg("R","M",(e,t)=>{let r=sf(t);tE(e.renamed,r),tE(e.modified,r.to)}),sg("!","!",(e,t)=>{tE(e.ignored=e.ignored||[],t)}),sg("?","?",(e,t)=>tE(e.not_added,t)),...sb("A","A","U"),...sb("D","D","U"),...sb("U","A","D","U"),["##",(e,t)=>{let r;r=/ahead (\d+)/.exec(t),e.ahead=r&&+r[1]||0,r=/behind (\d+)/.exec(t),e.behind=r&&+r[1]||0,r=/^(.+?(?=(?:\.{3}|\s|$)))/.exec(t),e.current=r&&r[1],r=/\.{3}(\S*)/.exec(t),e.tracking=r&&r[1],r=/\son\s([\S]+)$/.exec(t),e.current=r&&r[1]||e.current,e.detached=/\(no branch\)/.test(t)}]]),eD=function(e){let t=e.split(c),r=new eP;for(let e=0,s=t.length;e<s;){let s=t[e++].trim();s&&("R"===s.charAt(0)&&(s+=c+(t[e++]||"")),function(e,t){let r=t.trim();switch(" "){case r.charAt(2):return s(r.charAt(0),r.charAt(1),r.substr(3));case r.charAt(1):return s(" ",r.charAt(0),r.substr(2));default:return}function s(t,r,s){let n=`${t}${r}`,i=eR.get(n);i&&i(e,s),"##"!==n&&"!!"!==n&&e.files.push(new eM(s,t,r))}}(r,s))}return r}}}),sk=ti({"src/lib/tasks/status.ts"(){sy(),e$=["--null","-z"]}});function sw(e=0,t=0,r=0,s="",n=!0){return Object.defineProperty({major:e,minor:t,patch:r,agent:s,installed:n},"toString",{value(){return`${this.major}.${this.minor}.${this.patch}`},configurable:!1,enumerable:!1})}function sv(e){return e===eq?sw(0,0,0,"",!1):t0(sw(0,0,0,e),eL,e)}var sx=ti({"src/lib/tasks/version.ts"(){t3(),eq="installed=false",eL=[new k(/version (\d+)\.(\d+)\.(\d+)(?:\s*\((.+)\))?/,(e,[t,r,s,n=""])=>{Object.assign(e,sw(tI(t),tI(r),tI(s),n))}),new k(/version (\d+)\.(\d+)\.(\D+)(.+)?$/,(e,[t,r,s,n=""])=>{Object.assign(e,sw(tI(t),tI(r),s,n))})]}}),s_={};ta(s_,{SimpleGitApi:()=>eN});var sT=ti({"src/lib/simple-git-api.ts"(){rR(),r$(),rL(),rN(),rG(),rb(),rU(),rk(),rz(),rX(),r5(),so(),sd(),sh(),sk(),ro(),sx(),t3(),Object.assign((eN=class{constructor(e){this._executor=e}_runTask(e,t){let r=this._executor.chain(),s=r.push(e);return t&&function(e,t,r=u){t.then(e=>{r(null,e)},t=>{let s;(null==t?void 0:t.task)===e&&r(t instanceof o?(s=e=>{console.warn(`simple-git deprecation notice: accessing GitResponseError.${e} should be GitResponseError.git.${e}, this will no longer be available in version 3`),s=u},Object.create(t,Object.getOwnPropertyNames(t.git).reduce(function(e,r){return r in t||(e[r]={enumerable:!1,configurable:!1,get:()=>(s(r),t.git[r])}),e},{}))):t,void 0)})}(e,s,t),Object.create(this,{then:{value:s.then.bind(s)},catch:{value:s.catch.bind(s)},_executor:{value:r}})}add(e){return this._runTask(rs(["add",...tj(e)]),tK(arguments))}cwd(e){let t=tK(arguments);return"string"==typeof e?this._runTask(rD(e,this._executor),t):"string"==typeof(null==e?void 0:e.path)?this._runTask(rD(e.path,e.root&&this._executor||void 0),t):this._runTask(rr("Git.cwd: workingDirectory must be supplied as a string"),t)}hashObject(e,t){return this._runTask(function(e,t){let r=["hash-object",e];return t&&r.push("-w"),rs(r,!0)}(e,!0===t),tK(arguments))}init(e){return this._runTask(function(e=!1,t,r){let s=["init",...r];return e&&!s.includes(ee)&&s.splice(1,0,ee),{commands:s,format:"utf-8",parser:e=>(function(e,t,r){let s;let n=String(r).trim();if(s=Q.exec(n))return new K(e,t,!1,s[1]);if(s=Y.exec(n))return new K(e,t,!0,s[1]);let i="",a=n.split(" ");for(;a.length;)if("in"===a.shift()){i=a.join(" ");break}return new K(e,t,/^re/i.test(n),i)})(s.includes("--bare"),t,e)}}(!0===e,this._executor.cwd,tV(arguments)),tK(arguments))}merge(){return this._runTask(sa(tV(arguments)),tK(arguments))}mergeFromTo(e,t){return h(e)&&h(t)?this._runTask(sa([e,t,...tV(arguments)]),tK(arguments,!1)):this._runTask(rr("Git.mergeFromTo requires that the 'remote' and 'branch' arguments are supplied as strings"))}outputHandler(e){return this._executor.outputHandler=e,this}push(){let e=sp({remote:tL(arguments[0],h),branch:tL(arguments[1],h)},tV(arguments));return this._runTask(e,tK(arguments))}stash(){return this._runTask(rs(["stash",...tV(arguments)]),tK(arguments))}status(){var e;return this._runTask((e=tV(arguments),{format:"utf-8",commands:["status","--porcelain","-b","-u","--null",...e.filter(e=>!e$.includes(e))],parser:e=>eD(e)}),tK(arguments))}}).prototype,{checkout(){return this._runTask(rq(tV(arguments,1)),tK(arguments))},checkoutBranch(e,t){return this._runTask(rq(["-b",e,t,...tV(arguments)]),tK(arguments))},checkoutLocalBranch(e){return this._runTask(rq(["-b",e,...tV(arguments)]),tK(arguments))}},{commit(e,...t){var r,s,n;let i=tK(arguments),a=!f(e)&&rr("git.commit: requires the commit message to be supplied as a string/string[]")||(r=tj(e),s=tj(tL(t[0],f,[])),n=[...tL(t[1],d,[]),...tV(arguments,0,!0)],{commands:["-c","core.abbrev=40","commit",...tM(r,"-m"),...s,...n],format:"utf-8",parser:rB});return this._runTask(a,i)}},{addConfig(e,t,...r){return this._runTask(function(e,t,r,s){let n=["config",`--${s}`];return r&&n.push("--add"),n.push(e,t),{commands:n,format:"utf-8",parser:e=>e}}(e,t,!0===r[0],rg(r[1],"local")),tK(arguments))},getConfig(e,t){return this._runTask(function(e,t){let r=["config","--null","--show-origin","--get-all",e];return t&&r.splice(1,0,`--${t}`),{commands:r,format:"utf-8",parser:t=>(function(e,t){let r=null,s=[],n=new Map;for(let i of rm(e,t))i.key===t&&(s.push(r=i.value),n.has(i.file)||n.set(i.file,[]),n.get(i.file).push(r));return{key:t,paths:Array.from(n.keys()),scopes:n,value:r,values:s}})(t,e)}}(e,rg(t,void 0)),tK(arguments))},listConfig(...e){return this._runTask(function(e){let t=["config","--list","--show-origin","--null"];return e&&t.push(`--${e}`),{commands:t,format:"utf-8",parser:e=>(function(e){let t=new D;for(let r of rm(e))t.addValue(r.file,String(r.key),r.value);return t})(e)}}(rg(e[0],void 0)),tK(arguments))}},{countObjects(){return this._runTask({commands:["count-objects","--verbose"],format:"utf-8",parser:e=>t0({count:0,garbage:0,inPack:0,packs:0,prunePackable:0,size:0,sizeGarbage:0,sizePack:0},[V],e)})}},{firstCommit(){return this._runTask(rs(["rev-list","--max-parents=0","HEAD"],!0),tK(arguments))}},{grep(e){let t=tK(arguments),r=tV(arguments);for(let e of N)if(r.includes(e))return this._runTask(rr(`git.grep: use of "${e}" is not supported.`),t);"string"==typeof e&&(e=(function(...e){return new G().param(...e)})().param(e));let s=["grep","--null","-n","--full-name",...r,...e];return this._runTask({commands:s,format:"utf-8",parser:e=>(function(e){let t=new Set,r={};return t_(e,e=>{let[s,n,i]=e.split(c);t.add(s),(r[s]=r[s]||[]).push({line:tI(n),path:s,preview:i})}),{paths:t,results:r}})(e)},t)}},{log(...e){let t=tK(arguments),r=r7(tW(arguments),tL(arguments[0],d)),s=function(e,t){return h(e)&&h(t)&&rr("git.log(string, string) should be replaced with git.log({ from: string, to: string })")}(...e)||r3(r.commands)||function(e,t,r){let s=rY(e,t,rZ(r));return{commands:["log",...r],format:"utf-8",parser:s}}(r.splitter,r.fields,r.commands);return this._runTask(s,t)}},{showBuffer(){let e=["show",...tV(arguments,1)];return e.includes("--binary")||e.splice(1,0,"--binary"),this._runTask(rn(e),tK(arguments))},show(){let e=["show",...tV(arguments,1)];return this._runTask(rs(e),tK(arguments))}},{version(){return this._runTask({commands:["--version"],format:"utf-8",parser:sv,onError(e,t,r,s){if(-2===e.exitCode)return r(Buffer.from(eq));s(t)}})}})}}),sE={};ta(sE,{Scheduler:()=>eF});var sS=ti({"src/lib/runners/scheduler.ts"(){let e;t3(),rO(),e=0,eB=()=>{e++;let{promise:t,done:r}=(0,e2.dD)();return{promise:t,done:r,id:e}},eF=class{constructor(e=2){this.concurrency=e,this.logger=rS("","scheduler"),this.pending=[],this.running=[],this.logger("Constructed, concurrency=%s",e)}schedule(){if(!this.pending.length||this.running.length>=this.concurrency){this.logger("Schedule attempt ignored, pending=%s running=%s concurrency=%s",this.pending.length,this.running.length,this.concurrency);return}let e=tE(this.running,this.pending.shift());this.logger("Attempting id=%s",e.id),e.done(()=>{this.logger("Completing id=",e.id),tO(this.running,e),this.schedule()})}next(){let{promise:e,id:t}=tE(this.pending,eB());return this.logger("Scheduling id=%s",t),this.schedule(),e}}}}),sO={};function sj(e,t){return rs(["apply",...t,...e])}ta(sO,{applyPatchTask:()=>sj});var sA=ti({"src/lib/tasks/apply-patch.ts"(){ro()}}),sC=ti({"src/lib/responses/BranchDeleteSummary.ts"(){eG=class{constructor(){this.all=[],this.branches={},this.errors=[]}get success(){return!this.errors.length}}}});function sI(e,t){return 1===t&&eU.test(e)}var sM=ti({"src/lib/parsers/parse-branch-delete.ts"(){sC(),t3(),eU=/^error[^']+'([^']+)'/m,ez=[new k(/(\S+)\s+\(\S+\s([^)]+)\)/,(e,[t,r])=>{let s={branch:t,hash:r,success:!0};e.all.push(s),e.branches[t]=s}),new k(eU,(e,[t])=>{let r={branch:t,hash:null,success:!1};e.errors.push(r),e.all.push(r),e.branches[t]=r})],eH=(e,t)=>t0(new eG,ez,[e,t])}}),sP=ti({"src/lib/responses/BranchSummary.ts"(){eX=class{constructor(){this.all=[],this.branches={},this.current="",this.detached=!1}push(e,t,r,s,n){"*"===e&&(this.detached=t,this.current=r),this.all.push(r),this.branches[r]={current:"*"===e,linkedWorkTree:"+"===e,name:r,commit:s,label:n}}}}});function sR(e){return e?e.charAt(0):""}function sD(e){return t0(new eX,eZ,e)}var s$=ti({"src/lib/parsers/parse-branch.ts"(){sP(),t3(),eZ=[new k(/^([*+]\s)?\((?:HEAD )?detached (?:from|at) (\S+)\)\s+([a-z0-9]+)\s(.*)$/,(e,[t,r,s,n])=>{e.push(sR(t),!0,r,s,n)}),new k(RegExp("^([*+]\\s)?(\\S+)\\s+([a-z0-9]+)\\s?(.*)$","s"),(e,[t,r,s,n])=>{e.push(sR(t),!1,r,s,n)})]}}),sq={};function sL(e){let t=["-d","-D","--delete"];return e.some(e=>t.includes(e))}function sN(e){let t=sL(e),r=["branch",...e];return 1===r.length&&r.push("-a"),r.includes("-v")||r.splice(1,0,"-v"),{format:"utf-8",commands:r,parser:(e,r)=>t?eH(e,r).all[0]:sD(e)}}function sB(){return{format:"utf-8",commands:["branch","-v"],parser:sD}}function sF(e,t=!1){return{format:"utf-8",commands:["branch","-v",t?"-D":"-d",...e],parser:(e,t)=>eH(e,t),onError({exitCode:e,stdOut:t},r,s,n){if(!sI(String(r),e))return n(r);s(t)}}}function sG(e,t=!1){let r={format:"utf-8",commands:["branch","-v",t?"-D":"-d",e],parser:(t,r)=>eH(t,r).branches[e],onError({exitCode:e,stdErr:t,stdOut:s},n,i,a){if(!sI(String(n),e))return a(n);throw new o(r.parser(tP(s),tP(t)),String(n))}};return r}ta(sq,{branchLocalTask:()=>sB,branchTask:()=>sN,containsDeleteBranchCommand:()=>sL,deleteBranchTask:()=>sG,deleteBranchesTask:()=>sF});var sU=ti({"src/lib/tasks/branch.ts"(){tm(),sM(),s$(),t3()}}),sz=ti({"src/lib/responses/CheckIgnore.ts"(){eJ=e=>e.split(/\n/g).map(e=>e.trim()).filter(e=>!!e)}}),sH={};function sX(e){return{commands:["check-ignore",...e],format:"utf-8",parser:eJ}}ta(sH,{checkIgnoreTask:()=>sX});var sZ=ti({"src/lib/tasks/check-ignore.ts"(){sz()}}),sJ={};function sV(e){return/^--upload-pack(=|$)/.test(e)}function sW(e,t,r){let s=["clone",...r];return(h(e)&&s.push(e),h(t)&&s.push(t),s.find(sV))?rr("git.fetch: potential exploit argument blocked."):rs(s)}function sK(e,t,r){return tE(r,"--mirror"),sW(e,t,r)}ta(sJ,{cloneMirrorTask:()=>sK,cloneTask:()=>sW});var sQ=ti({"src/lib/tasks/clone.ts"(){ro(),t3()}});function sY(e,t){return t0({raw:e,remote:null,branches:[],tags:[],updated:[],deleted:[]},eV,[e,t])}var s0=ti({"src/lib/parsers/parse-fetch.ts"(){t3(),eV=[new k(/From (.+)$/,(e,[t])=>{e.remote=t}),new k(/\* \[new branch]\s+(\S+)\s*-> (.+)$/,(e,[t,r])=>{e.branches.push({name:t,tracking:r})}),new k(/\* \[new tag]\s+(\S+)\s*-> (.+)$/,(e,[t,r])=>{e.tags.push({name:t,tracking:r})}),new k(/- \[deleted]\s+\S+\s*-> (.+)$/,(e,[t])=>{e.deleted.push({tracking:t})}),new k(/\s*([^.]+)\.\.(\S+)\s+(\S+)\s*-> (.+)$/,(e,[t,r,s,n])=>{e.updated.push({name:s,tracking:n,to:r,from:t})})]}}),s1={};function s2(e){return/^--upload-pack(=|$)/.test(e)}function s3(e,t,r){let s=["fetch",...r];return(e&&t&&s.push(e,t),s.find(s2))?rr("git.fetch: potential exploit argument blocked."):{commands:s,format:"utf-8",parser:sY}}ta(s1,{fetchTask:()=>s3});var s8=ti({"src/lib/tasks/fetch.ts"(){s0(),ro()}});function s7(e){return t0({moves:[]},eW,e)}var s5=ti({"src/lib/parsers/parse-move.ts"(){t3(),eW=[new k(/^Renaming (.+) to (.+)$/,(e,[t,r])=>{e.moves.push({from:t,to:r})})]}}),s4={};function s6(e,t){return{commands:["mv","-v",...tj(e),t],format:"utf-8",parser:s7}}ta(s4,{moveTask:()=>s6});var s9=ti({"src/lib/tasks/move.ts"(){s5(),t3()}}),ne={};function nt(e,t,r){let s=["pull",...r];return e&&t&&s.splice(1,0,e,t),{commands:s,format:"utf-8",parser:(e,t)=>eT(e,t),onError(e,t,r,s){let n=function(e,t){let r=t0(new ef,ex,[e,t]);return r.message&&r}(tP(e.stdOut),tP(e.stdErr));if(n)return s(new o(n));s(t)}}}ta(ne,{pullTask:()=>nt});var nr=ti({"src/lib/tasks/pull.ts"(){tm(),sn(),t3()}});function ns(e){let t={};return ni(e,([e])=>t[e]={name:e}),Object.values(t)}function nn(e){let t={};return ni(e,([e,r,s])=>{t.hasOwnProperty(e)||(t[e]={name:e,refs:{fetch:"",push:""}}),s&&r&&(t[e].refs[s.replace(/[^a-z]/g,"")]=r)}),Object.values(t)}function ni(e,t){t_(e,e=>t(e.split(/\s+/)))}var na=ti({"src/lib/responses/GetRemoteSummary.ts"(){t3()}}),no={};function nl(e,t,r){return rs(["remote","add",...r,e,t])}function nc(e){let t=["remote"];return e&&t.push("-v"),{commands:t,format:"utf-8",parser:e?nn:ns}}function nu(e){let t=[...e];return"ls-remote"!==t[0]&&t.unshift("ls-remote"),rs(t)}function np(e){let t=[...e];return"remote"!==t[0]&&t.unshift("remote"),rs(t)}function nd(e){return rs(["remote","remove",e])}ta(no,{addRemoteTask:()=>nl,getRemotesTask:()=>nc,listRemotesTask:()=>nu,remoteTask:()=>np,removeRemoteTask:()=>nd});var nh=ti({"src/lib/tasks/remote.ts"(){na(),ro()}}),nm={};function nf(e={},t){let r=r7(e),s=["stash","list",...r.commands,...t],n=rY(r.splitter,r.fields,rZ(s));return r3(s)||{commands:s,format:"utf-8",parser:n}}ta(nm,{stashListTask:()=>nf});var ng=ti({"src/lib/tasks/stash-list.ts"(){rV(),r0(),r8(),r5()}}),nb={};function ny(e,t){return nw(["add",e,t])}function nk(e){return nw(["init",...e])}function nw(e){let t=[...e];return"submodule"!==t[0]&&t.unshift("submodule"),rs(t)}function nv(e){return nw(["update",...e])}ta(nb,{addSubModuleTask:()=>ny,initSubModuleTask:()=>nk,subModuleTask:()=>nw,updateSubModuleTask:()=>nv});var nx=ti({"src/lib/tasks/sub-module.ts"(){ro()}});function n_(e,t){return e===t?0:e>t?1:-1}function nT(e){return e.trim()}function nE(e){return"string"==typeof e&&parseInt(e.replace(/^\D+/g,""),10)||0}var nS=ti({"src/lib/responses/TagList.ts"(){eK=class{constructor(e,t){this.all=e,this.latest=t}},eQ=function(e,t=!1){let r=e.split("\n").map(nT).filter(Boolean);t||r.sort(function(e,t){let r=e.split("."),s=t.split(".");if(1===r.length||1===s.length)return function(e,t){let r=isNaN(e);return r!==isNaN(t)?r?1:-1:r?n_(e,t):0}(nE(r[0]),nE(s[0]));for(let e=0,t=Math.max(r.length,s.length);e<t;e++){let t=n_(nE(r[e]),nE(s[e]));if(t)return t}return 0});let s=t?r[0]:[...r].reverse().find(e=>e.indexOf(".")>=0);return new eK(r,s)}}}),nO={};function nj(e=[]){let t=e.some(e=>/^--sort=/.test(e));return{format:"utf-8",commands:["tag","-l",...e],parser:e=>eQ(e,t)}}function nA(e){return{format:"utf-8",commands:["tag",e],parser:()=>({name:e})}}function nC(e,t){return{format:"utf-8",commands:["tag","-a","-m",t,e],parser:()=>({name:e})}}ta(nO,{addAnnotatedTagTask:()=>nC,addTagTask:()=>nA,tagListTask:()=>nj});var nI=ti({"src/lib/tasks/tag.ts"(){nS()}}),nM=(s={"src/git.js"(e,t){var{GitExecutor:r}=(rP(),tl(rM)),{SimpleGitApi:s}=(sT(),tl(s_)),{Scheduler:n}=(sS(),tl(sE)),{configurationErrorTask:i}=(ro(),tl(re)),{asArray:a,filterArray:o,filterPrimitives:l,filterString:c,filterStringOrStringArray:u,filterType:p,getTrailingOptions:d,trailingFunctionArgument:h,trailingOptionsArgument:m}=(t3(),tl(t2)),{applyPatchTask:f}=(sA(),tl(sO)),{branchTask:g,branchLocalTask:b,deleteBranchesTask:y,deleteBranchTask:k}=(sU(),tl(sq)),{checkIgnoreTask:w}=(sZ(),tl(sH)),{checkIsRepoTask:v}=(t6(),tl(t8)),{cloneTask:x,cloneMirrorTask:_}=(sQ(),tl(sJ)),{cleanWithOptionsTask:T,isCleanOptionsArray:E}=(rh(),tl(rl)),{diffSummaryTask:S}=(r8(),tl(r1)),{fetchTask:O}=(s8(),tl(s1)),{moveTask:j}=(s9(),tl(s4)),{pullTask:A}=(nr(),tl(ne)),{pushTagsTask:C}=(sd(),tl(sc)),{addRemoteTask:I,getRemotesTask:M,listRemotesTask:P,remoteTask:R,removeRemoteTask:D}=(nh(),tl(no)),{getResetMode:$,resetTask:q}=(rT(),tl(rw)),{stashListTask:L}=(ng(),tl(nm)),{addSubModuleTask:N,initSubModuleTask:B,subModuleTask:F,updateSubModuleTask:G}=(nx(),tl(nb)),{addAnnotatedTagTask:U,addTagTask:z,tagListTask:H}=(nI(),tl(nO)),{straightThroughBufferTask:X,straightThroughStringTask:Z}=(ro(),tl(re));function J(e,t){this._plugins=t,this._executor=new r(e.baseDir,new n(e.maxConcurrentProcesses),t),this._trimmed=e.trimmed}function V(e,t,r,s){return"string"!=typeof r?i(`git.${e}() requires a string 'repoPath'`):t(r,p(s,c),d(arguments))}(J.prototype=Object.create(s.prototype)).constructor=J,J.prototype.customBinary=function(e){return this._plugins.reconfigure("binary",e),this},J.prototype.env=function(e,t){return 1==arguments.length&&"object"==typeof e?this._executor.env=e:(this._executor.env=this._executor.env||{})[e]=t,this},J.prototype.stashList=function(e){return this._runTask(L(m(arguments)||{},o(e)&&e||[]),h(arguments))},J.prototype.clone=function(){return this._runTask(V("clone",x,...arguments),h(arguments))},J.prototype.mirror=function(){return this._runTask(V("mirror",_,...arguments),h(arguments))},J.prototype.mv=function(e,t){return this._runTask(j(e,t),h(arguments))},J.prototype.checkoutLatestTag=function(e){var t=this;return this.pull(function(){t.tags(function(r,s){t.checkout(s.latest,e)})})},J.prototype.pull=function(e,t,r,s){return this._runTask(A(p(e,c),p(t,c),d(arguments)),h(arguments))},J.prototype.fetch=function(e,t){return this._runTask(O(p(e,c),p(t,c),d(arguments)),h(arguments))},J.prototype.silent=function(e){return console.warn("simple-git deprecation notice: git.silent: logging should be configured using the `debug` library / `DEBUG` environment variable, this will be an error in version 3"),this},J.prototype.tags=function(e,t){return this._runTask(H(d(arguments)),h(arguments))},J.prototype.rebase=function(){return this._runTask(Z(["rebase",...d(arguments)]),h(arguments))},J.prototype.reset=function(e){return this._runTask(q($(e),d(arguments)),h(arguments))},J.prototype.revert=function(e){let t=h(arguments);return"string"!=typeof e?this._runTask(i("Commit must be a string"),t):this._runTask(Z(["revert",...d(arguments,0,!0),e]),t)},J.prototype.addTag=function(e){let t="string"==typeof e?z(e):i("Git.addTag requires a tag name");return this._runTask(t,h(arguments))},J.prototype.addAnnotatedTag=function(e,t){return this._runTask(U(e,t),h(arguments))},J.prototype.deleteLocalBranch=function(e,t,r){return this._runTask(k(e,"boolean"==typeof t&&t),h(arguments))},J.prototype.deleteLocalBranches=function(e,t,r){return this._runTask(y(e,"boolean"==typeof t&&t),h(arguments))},J.prototype.branch=function(e,t){return this._runTask(g(d(arguments)),h(arguments))},J.prototype.branchLocal=function(e){return this._runTask(b(),h(arguments))},J.prototype.raw=function(e){let t=!Array.isArray(e),r=[].slice.call(t?arguments:e,0);for(let e=0;e<r.length&&t;e++)if(!l(r[e])){r.splice(e,r.length-e);break}r.push(...d(arguments,0,!0));var s=h(arguments);return r.length?this._runTask(Z(r,this._trimmed),s):this._runTask(i("Raw: must supply one or more command to execute"),s)},J.prototype.submoduleAdd=function(e,t,r){return this._runTask(N(e,t),h(arguments))},J.prototype.submoduleUpdate=function(e,t){return this._runTask(G(d(arguments,!0)),h(arguments))},J.prototype.submoduleInit=function(e,t){return this._runTask(B(d(arguments,!0)),h(arguments))},J.prototype.subModule=function(e,t){return this._runTask(F(d(arguments)),h(arguments))},J.prototype.listRemote=function(){return this._runTask(P(d(arguments)),h(arguments))},J.prototype.addRemote=function(e,t,r){return this._runTask(I(e,t,d(arguments)),h(arguments))},J.prototype.removeRemote=function(e,t){return this._runTask(D(e),h(arguments))},J.prototype.getRemotes=function(e,t){return this._runTask(M(!0===e),h(arguments))},J.prototype.remote=function(e,t){return this._runTask(R(d(arguments)),h(arguments))},J.prototype.tag=function(e,t){let r=d(arguments);return"tag"!==r[0]&&r.unshift("tag"),this._runTask(Z(r),h(arguments))},J.prototype.updateServerInfo=function(e){return this._runTask(Z(["update-server-info"]),h(arguments))},J.prototype.pushTags=function(e,t){let r=C({remote:p(e,c)},d(arguments));return this._runTask(r,h(arguments))},J.prototype.rm=function(e){return this._runTask(Z(["rm","-f",...a(e)]),h(arguments))},J.prototype.rmKeepLocal=function(e){return this._runTask(Z(["rm","--cached",...a(e)]),h(arguments))},J.prototype.catFile=function(e,t){return this._catFile("utf-8",arguments)},J.prototype.binaryCatFile=function(){return this._catFile("buffer",arguments)},J.prototype._catFile=function(e,t){var r=h(t),s=["cat-file"],n=t[0];if("string"==typeof n)return this._runTask(i("Git.catFile: options must be supplied as an array of strings"),r);Array.isArray(n)&&s.push.apply(s,n);let a="buffer"===e?X(s):Z(s);return this._runTask(a,r)},J.prototype.diff=function(e,t){let r=c(e)?i("git.diff: supplying options as a single string is no longer supported, switch to an array of strings"):Z(["diff",...d(arguments)]);return this._runTask(r,h(arguments))},J.prototype.diffSummary=function(){return this._runTask(S(d(arguments,1)),h(arguments))},J.prototype.applyPatch=function(e){let t=u(e)?f(a(e),d([].slice.call(arguments,1))):i("git.applyPatch requires one or more string patches as the first argument");return this._runTask(t,h(arguments))},J.prototype.revparse=function(){let e=["rev-parse",...d(arguments,!0)];return this._runTask(Z(e,!0),h(arguments))},J.prototype.clean=function(e,t,r){let s=E(e),n=s&&e.join("")||p(e,c)||"",i=d([].slice.call(arguments,s?1:0));return this._runTask(T(n,i),h(arguments))},J.prototype.exec=function(e){return this._runTask({commands:[],format:"utf-8",parser(){"function"==typeof e&&e()}})},J.prototype.clearQueue=function(){return this},J.prototype.checkIgnore=function(e,t){return this._runTask(w(a(p(e,u,[]))),h(arguments))},J.prototype.checkIsRepo=function(e,t){return this._runTask(v(p(e,c)),h(arguments))},t.exports=J}},function(){return n||(0,s[e6(s)[0]])((n={exports:{}}).exports,n),n.exports});td(),th();var nP=class extends a{constructor(e,t){super(void 0,t),this.config=e}};th(),th();var nR=class extends a{constructor(e,t,r){super(e,r),this.task=e,this.plugin=t,Object.setPrototypeOf(this,new.target.prototype)}};tm(),tf(),t6(),rh(),rb(),ry(),rk(),rT(),t3(),t3();var nD=(0,e2.gX)().promise;t3();var n$="Invalid value supplied for custom binary, restricted characters must be removed or supply the unsafe.allowUnsafeCustomBinary option";function nq(e){return!e||!/^([a-z]:)?([a-z0-9/.\\_-]+)$/i.test(e)}function nL(e,t){if(e.length<1||e.length>2)throw new nR(void 0,"binary","Invalid value supplied for custom binary, requires a single string or an array containing either one or two strings");if(e.some(nq)){if(t)console.warn(n$);else throw new nR(void 0,"binary",n$)}let[r,s]=e;return{binary:r,prefix:s}}function nN(e){return{type:"task.error",action(t,r){let s=e(t.error,{stdErr:r.stdErr,stdOut:r.stdOut,exitCode:r.exitCode});return Buffer.isBuffer(s)?{error:new a(void 0,s.toString("utf-8"))}:{error:s}}}}th(),t3();var nB=class{constructor(){this.plugins=new Set,this.events=new e3.EventEmitter}on(e,t){this.events.on(e,t)}reconfigure(e,t){this.events.emit(e,t)}append(e,t){let r=tE(this.plugins,{type:e,action:t});return()=>this.plugins.delete(r)}add(e){let t=[];return tj(e).forEach(e=>e&&this.plugins.add(tE(t,e))),()=>{t.forEach(e=>this.plugins.delete(e))}}exec(e,t,r){let s=t,n=Object.freeze(Object.create(r));for(let t of this.plugins)t.type===e&&(s=t.action(s,n));return s}};t3(),t3(),td(),t3();var nF=nM();tm();var nG=function(e,t){var r;let s=new nB,n=tX(e&&("string"==typeof e?{baseDir:e}:e)||{},t);if(!tT(n.baseDir))throw new nP(n,"Cannot use simple-git on a directory that does not exist");return Array.isArray(n.config)&&s.add(function(e){let t=tM(e,"-c");return{type:"spawn.args",action:e=>[...t,...e]}}(n.config)),s.add(function({allowUnsafeProtocolOverride:e=!1,allowUnsafePack:t=!1}={}){return{type:"spawn.args",action:(r,s)=>(r.forEach((n,i)=>{let a=i<r.length?r[i+1]:"";e||function(e,t){if("string"==typeof e&&"-c"===e.trim().toLowerCase()&&/^\s*protocol(.[a-z]+)?.allow/.test(t))throw new nR(void 0,"unsafe","Configuring protocol.allow is not permitted without enabling allowUnsafeExtProtocol")}(n,a),t||function(e,t){if(/^\s*--(upload|receive)-pack/.test(e))throw new nR(void 0,"unsafe","Use of --upload-pack or --receive-pack is not permitted without enabling allowUnsafePack");if("clone"===t&&/^\s*-u\b/.test(e))throw new nR(void 0,"unsafe","Use of clone with option -u is not permitted without enabling allowUnsafePack");if("push"===t&&/^\s*--exec\b/.test(e))throw new nR(void 0,"unsafe","Use of push with option --exec is not permitted without enabling allowUnsafePack")}(n,s.method)}),r)}}(n.unsafe)),s.add({type:"spawn.args",action(e){let t;let r=[];function s(e){(t=t||[]).push(...e)}for(let t=0;t<e.length;t++){let n=e[t];if(tu(n)){s(tp(n));continue}if("--"===n){s(e.slice(t+1).flatMap(e=>tu(e)&&tp(e)||e));break}r.push(n)}return t?[...r,"--",...t.map(String)]:r}}),s.add(function({onClose:e=!0,onExit:t=50}={}){function r(e,t,r){!1!==e&&(!0===e?t.promise:t.promise.then(()=>tD(e))).then(r.done)}return{type:"spawn.after",action(s,n){return tc(this,arguments,function*(s,{spawned:n,close:i}){var a,o;let l=function(){let s=-1,n={close:(0,e2.gX)(),closeTimeout:(0,e2.gX)(),exit:(0,e2.gX)(),exitTimeout:(0,e2.gX)()},i=Promise.race([!1===e?nD:n.closeTimeout.promise,!1===t?nD:n.exitTimeout.promise]);return r(e,n.close,n.closeTimeout),r(t,n.exit,n.exitTimeout),{close(e){s=e,n.close.done()},exit(e){s=e,n.exit.done()},get exitCode(){return s},result:i}}(),c=!0,u=()=>void(c=!1);null==(a=n.stdout)||a.on("data",u),null==(o=n.stderr)||o.on("data",u),n.on("error",u),n.on("close",e=>l.close(e)),n.on("exit",e=>l.exit(e));try{yield l.result,c&&(yield tD(50)),i(l.exitCode)}catch(e){i(l.exitCode,e)}})}}}(n.completion)),n.abort&&s.add(function(e){if(e)return[{type:"spawn.before",action(t,r){e.aborted&&r.kill(new nR(void 0,"abort","Abort already signaled"))}},{type:"spawn.after",action(t,r){function s(){r.kill(new nR(void 0,"abort","Abort signal received"))}e.addEventListener("abort",s),r.spawned.on("close",()=>e.removeEventListener("abort",s))}}]}(n.abort)),n.progress&&s.add(function(e){let t="--progress",r=["checkout","clone","fetch","pull","push"];return[{type:"spawn.args",action:(e,s)=>r.includes(s.method)?tS(e,t):e},{type:"spawn.after",action(r,s){var n;s.commands.includes(t)&&(null==(n=s.spawned.stderr)||n.on("data",t=>{let r=/^([\s\S]+?):\s*(\d+)% \((\d+)\/(\d+)\)/.exec(t.toString("utf8"));r&&e({method:s.method,stage:String(r[1].toLowerCase().split(" ",1))||"unknown",progress:tI(r[2]),processed:tI(r[3]),total:tI(r[4])})}))}}]}(n.progress)),n.timeout&&s.add(function({block:e,stdErr:t=!0,stdOut:r=!0}){if(e>0)return{type:"spawn.after",action(s,n){var i,a;let o;function l(){o&&clearTimeout(o),o=setTimeout(u,e)}function c(){var e,t;null==(e=n.spawned.stdout)||e.off("data",l),null==(t=n.spawned.stderr)||t.off("data",l),n.spawned.off("exit",c),n.spawned.off("close",c),o&&clearTimeout(o)}function u(){c(),n.kill(new nR(void 0,"timeout","block timeout reached"))}r&&(null==(i=n.spawned.stdout)||i.on("data",l)),t&&(null==(a=n.spawned.stderr)||a.on("data",l)),n.spawned.on("exit",c),n.spawned.on("close",c),l()}}}(n.timeout)),n.spawnOptions&&s.add(function(e){let t=tR(e,["uid","gid"]);return{type:"spawn.options",action:e=>ts(ts({},t),e)}}(n.spawnOptions)),s.add(nN(function(e=!1,t=function(e){return!!(e.exitCode&&e.stdErr.length)},r=function(e){return Buffer.concat([...e.stdOut,...e.stdErr])}){return(s,n)=>(e||!s)&&t(n)?r(n):s}(!0))),n.errors&&s.add(nN(n.errors)),function(e,t=["git"],r=!1){let s=nL(tj(t),r);e.on("binary",e=>{s=nL(tj(e),r)}),e.append("spawn.binary",()=>s.binary),e.append("spawn.args",e=>s.prefix?[s.prefix,...e]:e)}(s,n.binary,null==(r=n.unsafe)?void 0:r.allowUnsafeCustomBinary),new nF(n,s)}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[8948,1242,4599,9092,6510,5540,4274,3269,2687,7807],()=>r(88855));module.exports=s})();